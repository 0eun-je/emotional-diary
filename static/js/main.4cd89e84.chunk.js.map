{"version":3,"sources":["components/Header.js","components/InnerTemplate.js","components/Profile.js","components/DiaryTemplate.js","components/DiaryDate.js","components/DiaryHeader.js","components/DiaryItem.js","pages/MainPage.js","components/InputDiary.js","pages/InputFormPage.js","components/Detail.js","pages/DetailPage.js","components/EmotionCategory.js","pages/EmotionsPage.js","components/CalendarForDiary.js","pages/Calendarpage.js","components/Stats.js","pages/StatsPage.js","components/RouterJS.js","App.js","reportWebVitals.js","index.js"],"names":["HeaderBlock","styled","div","MenuGroup","Header","to","InnerTemplateBlock","InnerTemplate","children","ProfileBlock","Photo","Edit","Nickname","EmotionBlock","Emotion","Profile","props","useState","imageURL","setImageURL","nickname","setNickname","d","Date","today","getFullYear","getMonth","getDate","strArray","split","joyCount","rageCount","sadCount","delightCount","loveCount","hateCount","desireCount","commonCount","othersCount","joyCountMonthly","rageCountMonthly","sadCountMonthly","delightCountMonthly","loveCountMonthly","hateCountMonthly","desireCountMonthly","commonCountMonthly","othersCountMonthly","diaries","forEach","diary","dateforDiary","emotion","className","htmlFor","src","alt","type","id","onChange","e","console","log","target","files","URL","createObjectURL","onClick","document","getElementById","style","display","value","DiaryTemplateBlock","DiaryTemplate","DiaryDateBlock","DiaryDate","year","setYear","month","setMonth","date","setDate","useEffect","getToday","DiaryHeaderBlock","DiaryButton","DiaryHeader","DiaryItemBlock","DiaryContent","DiaryItem","onRemove","background","color","subEmotion","situation","reason","decision","flexStyle","DiaryList","MainPage","initialToday","setToday","text","isMobile","useMediaQuery","query","isTablet","isPC","map","key","pathname","state","InputDairyBlock","DiaryEmotion","MainEmotion","DetailEmotion","InputForm","SubmitButton","emotionArray","main","sub","InputDiary","inputs","onCreate","currentIndex","setCurrentIndex","currentEmotion","setCurrentEmotion","currentSubEmotion","setCurrentSubEmotion","onClickMainEmotion","number","emo","push","onBlur","myResponse","thoughts","argument","InputFormPage","DetailBlock","ButtonBlock","Button","Detail","currentDiary","match","params","location","s","num","defaultValue","onEdit","DetailPage","EmotionCategoryBlock","FolderBlock","Folder","DiaryListBlock","EmotionCategory","EmotionsPage","CalendarBlock","CalendarForDiary","CalenderPage","StatsBlock","PieChart","BarChart","Mood","description","title","advice","MyResponsivePie","data","margin","top","right","bottom","left","innerRadius","padAngle","colors","scheme","cornerRadius","activeOuterRadiusOffset","borderWidth","borderColor","from","modifiers","arcLinkLabelsSkipAngle","arcLinkLabelsTextColor","arcLinkLabelsThickness","arcLinkLabelsColor","arcLabelsSkipAngle","arcLabelsTextColor","defs","size","padding","stagger","rotation","lineWidth","spacing","fill","legends","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemTextColor","itemDirection","itemOpacity","symbolSize","symbolShape","effects","on","MyResponsiveBar","keys","indexBy","valueScale","indexScale","round","valueFormat","format","enabled","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","axisLeft","labelSkipWidth","labelSkipHeight","labelTextColor","dataFrom","Stats","setJoyCount","setRageCount","setSadCount","setDelightCount","setLoveCount","setHateCount","setDesireCount","setCommonCount","setOthersCount","setJoyCountMonthly","setRageCountMonthly","setSadCountMonthly","setDelightCountMonthly","setLoveCountMonthly","setHateCountMonthly","setDesireCountMonthly","setCommonCountMonthly","setOthersCountMonthly","mostEmotion","setMostEmotion","rank","pieData","barData","ranking","sort","a","b","des","StatsPage","RouterJS","basename","process","path","exact","render","GlobalStyle","createGlobalStyle","initialState","reducer","action","concat","filter","App","nextId","useRef","useReducer","dispatch","useCallback","current","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.4cd89e84.chunk.js","sourcesContent":["/* Header : 상단 메뉴 */\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\n// style //\r\nconst HeaderBlock = styled.div`\r\n    display: flex;\r\n    height: 75px;\r\n    background: #FFFFFF;\r\n    box-shadow: 2px 2px 5px rgba(0, 0, 0, .1);\r\n\r\n    h1 {\r\n        margin: 18px 70px 0px 35px;\r\n        font-family: \"barunpenB\";\r\n        font-size: 30px;\r\n        letter-spacing: 1px;\r\n\r\n        &:hover{\r\n            color: #E98580;\r\n        }\r\n    }\r\n\r\n    @media screen and (max-width: 768px) {\r\n        h1 {\r\n            margin-top: 22px;\r\n            margin-right: 30px;\r\n            font-family: \"barunpenR\";\r\n            font-size: 25px; \r\n        }\r\n    }\r\n`;\r\n\r\nconst MenuGroup = styled.div`\r\n    display: flex;\r\n    margin-top: -5px;\r\n\r\n    h4 {\r\n        margin-right: 70px;\r\n        font-size: 22px;\r\n        \r\n        &:hover {\r\n            color: #DF5E5E;\r\n            cursor: pointer;\r\n        }\r\n    }\r\n\r\n    @media screen and (max-width: 768px) {\r\n        h4 {\r\n            margin-top: 32px;\r\n            margin-right: 40px;\r\n            font-size: 18px;\r\n        }\r\n    }\r\n`;\r\n\r\n// function //\r\nfunction Header() {\r\n    return (\r\n        <HeaderBlock>\r\n            <Link to=\"/\"><h1>감정일기</h1></Link>\r\n            <MenuGroup>\r\n                <Link to=\"/\"><h4>일기</h4></Link>\r\n                <Link to=\"/emotion\"><h4>감정 모아보기</h4></Link>\r\n                <Link to=\"/calendar\"><h4>캘린더</h4></Link>\r\n                <Link to=\"/stats\"><h4>통계</h4></Link>\r\n            </MenuGroup>\r\n        </HeaderBlock>\r\n    );\r\n}\r\n\r\nexport default Header;","/* InnerTemplate : component들이 화면 중앙에 있도록 margin값을 줌 */\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n// style //\r\nconst InnerTemplateBlock = styled.div`\r\n    margin: 0px 5%;\r\n    height: 1800px;\r\n\r\n    @media screen and (max-width: 768px) {\r\n        height: 2900px;\r\n    }\r\n`;\r\n\r\n// function //\r\nfunction InnerTemplate({ children }) {\r\n    return (\r\n        <InnerTemplateBlock>\r\n            {children}\r\n        </InnerTemplateBlock>\r\n    );\r\n}\r\n\r\nexport default InnerTemplate;","/* Profile : 모든 페이지에서 보이는 프로필. 사진, 닉네임 변경 가능 및 감정의 통계 출력 */\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { BsPencil } from \"react-icons/bs\";\r\n\r\n// style //\r\nconst ProfileBlock = styled.div`\r\n    width: 400px;\r\n    height: 1080px;\r\n    margin: 20px;\r\n    background: #FFFFFF;\r\n    border: 1px solid #DEE2E6;\r\n    box-shadow: 1px 1px 5px rgba(0, 0, 0, .08);\r\n    \r\n    .title{\r\n        margin: 40px 0px 25px 20px;\r\n        font-family: \"barunpenR\";\r\n        font-size: 21px;\r\n    }\r\n\r\n    @media screen and (max-width: 992px) {\r\n        width: 300px;\r\n        .title { font-size: 20px; }\r\n    }\r\n\r\n    @media screen and (max-width: 768px) {\r\n        width : auto;\r\n        .title { font-size: 23px; }\r\n    }\r\n`;\r\n\r\nconst Photo = styled.div`\r\n    margin-top: 110px;\r\n    \r\n    .imageBlock {\r\n        margin: 0px 100px;\r\n        border-radius: 50%;\r\n    }\r\n\r\n    .profilePhoto {\r\n        display: block;\r\n        width: 140px;\r\n        height: 140px;\r\n        margin: 0 auto;\r\n        border-radius: 50%;\r\n\r\n        &:hover{\r\n            filter: brightness(80%);\r\n        }\r\n    }\r\n\r\n    label {\r\n        &:hover {\r\n            cursor: pointer;\r\n        }\r\n    }\r\n\r\n    input {\r\n        visibility: hidden;\r\n    }\r\n\r\n    @media screen and (max-width: 992px) {\r\n        .profilePhoto {\r\n            width: 120px;\r\n            height: 120px;\r\n        }\r\n    }\r\n\r\n    @media screen and (max-width: 768px) {\r\n        margin-top: 80px;\r\n        .imageBlock { margin: 0px 35%; }\r\n        .profilePhoto { width: 140px; height: 140px; }\r\n    }\r\n`;\r\n\r\nconst Edit = styled.div`\r\n    display: none;\r\n    margin-top: 35px;\r\n\r\n    .editIcon {\r\n        font-size: 20px;\r\n        color: #DEE2E6;\r\n\r\n        &:hover {\r\n            color: #ADB5BD;\r\n        }\r\n    }\r\n\r\n    #editInput {\r\n        position: absolute;\r\n        display: none;\r\n        left: 150px;\r\n        width: 150px;\r\n        height: 25px;\r\n        margin-top: -30px;\r\n        border: 3px solid #F0E5D8;\r\n    }\r\n\r\n    #editButton {\r\n        position: absolute;\r\n        display: none;\r\n        left: 310px;\r\n        padding-top: 5px;\r\n        margin-top: -30px;\r\n        width: 50px;\r\n        height: 33px;\r\n        border: 3px solid #E6DDC6;\r\n        background: #F0E5D8;\r\n        cursor: pointer;\r\n        font-family: \"barunpenB\";\r\n        color: #A19882;\r\n        text-align: center;\r\n    }\r\n\r\n    #cancelButton{\r\n        position: absolute;\r\n        display: none;\r\n        left: 360px;\r\n        width: 50px;\r\n        height: 33px;\r\n        padding-top: 5px;\r\n        margin-top: -30px;\r\n        border: 3px solid #E6DDC6;\r\n        background: #F0E5D8;\r\n        cursor: pointer;\r\n        font-family: \"barunpenB\";\r\n        color: #A19882;\r\n        text-align: center;  \r\n    }\r\n\r\n    @media screen and (max-width: 992px) {\r\n        .editIcon { font-size: 18px; }\r\n        #editInput { left: 110px; width: 130px; }\r\n        #editButton { left: 250px; }\r\n        #cancelButton { left: 300px; }\r\n    }\r\n\r\n    @media screen and (max-width: 768px) {\r\n        .editIcon { font-size: 20px; }\r\n        #editInput { left: 200px; width: 150px; }\r\n        #editButton { left: 360px; }\r\n        #cancelButton { left: 410px; }\r\n    }\r\n`;\r\n\r\nconst Nickname = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    margin: -30px 20px 0px 20px;\r\n    padding-bottom: 50px;\r\n    border-bottom: 1px solid #CED4DA;\r\n\r\n    &:hover {\r\n        ${Edit} {\r\n            display: initial;\r\n        }\r\n        cursor: pointer;\r\n    }\r\n\r\n    h2 {\r\n        position: relative;\r\n        margin: 30px 20px 0px 20px;\r\n        text-align: center;\r\n        font-family: \"barunpenB\";\r\n        font-size: 25px;\r\n    }\r\n\r\n    @media screen and (max-width: 992px) {\r\n        h2 { font-size: 22px; }\r\n    }\r\n\r\n    @media screen and (max-width: 768px) {\r\n        h2 { font-size: 25px;}\r\n    }\r\n`;\r\n\r\nconst EmotionBlock = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    font-family: \"barunpenB\";\r\n`;\r\n\r\nconst Emotion = styled.div`\r\n    text-align: center;\r\n\r\n    .emotion {\r\n        width: 40px;\r\n        padding: 20px 11px;\r\n        margin: 0px 10px 5px 0px;\r\n        border-radius: 50%;\r\n        text-align: center;\r\n    }\r\n\r\n    .joy {\r\n        background: #FFEDA3;\r\n        color: #FFA900;\r\n    }\r\n\r\n    .joy-count {\r\n        color: #FFA900;\r\n    }\r\n\r\n    .rage {\r\n        background: #FFDCB8;\r\n        color: #FF7600;\r\n    }\r\n\r\n    .rage-count {\r\n        color: #FF7600;\r\n    }\r\n\r\n    .sad {\r\n        background: #CDF0EA;\r\n        color: #4B778D;\r\n    }\r\n\r\n    .sad-count {\r\n        color: #4B778D;\r\n    }\r\n\r\n    .delight {\r\n        background: #CCF6C8;\r\n        color: #558776;\r\n    }\r\n\r\n    .delight-count {\r\n        margin-left: -15px;\r\n        color: #558776;\r\n    }\r\n\r\n    .love {\r\n        margin-right: 0px;\r\n        background: #FFDDCC;\r\n        color: #FF616D;\r\n    }\r\n\r\n    .love-count {\r\n        margin-left: 0px;\r\n        color: #FF616D;\r\n    }\r\n\r\n    .hate {\r\n        background: #E7E6E1;\r\n        color: #868E96;\r\n    }\r\n\r\n    .hate-count {\r\n        color: #868e96;\r\n    }\r\n\r\n    .desire {\r\n        background: #FFE6E6;\r\n        color: #E98580;\r\n    }\r\n\r\n    .desire-count {\r\n        color: #E98580;\r\n    }\r\n\r\n    .common {\r\n        background: #E7D4B5;\r\n        color: #7D5A50;\r\n    }\r\n\r\n    .common-count {\r\n        color: #7D5A50;\r\n    }\r\n\r\n    .others {\r\n        background: #FFF5DA;\r\n        color: #C68B59;\r\n    }\r\n\r\n    .others-count {\r\n        color: #C68B59;\r\n    }\r\n\r\n    h6 {\r\n        margin: 0px 0px 40px -10px;\r\n        font-size: 16px;\r\n    }\r\n\r\n    @media screen and (max-width: 1300px) {\r\n        .emotion { \r\n            width: 35px;\r\n            padding: 20px 11px;\r\n            font-size: 12px;\r\n        }\r\n\r\n        h6 { font-size: 15px; }\r\n    }\r\n\r\n    @media screen and (max-width: 992px) {\r\n        .emotion { width: 28px; }\r\n        h6 { font-size: 14px; }\r\n    }\r\n\r\n    @media screen and (max-width: 768px) {\r\n        .emotion {\r\n            width: 50px;\r\n            padding: 23px 13px;\r\n            font-size: 18px;\r\n        }\r\n        h6 { font-size: 20px; }\r\n    }\r\n`;\r\n\r\n// function //\r\nfunction Profile(props) {\r\n    const [imageURL, setImageURL] = useState(\"../tae.jpg\");\r\n    const [nickname, setNickname] = useState(\"제로\");\r\n\r\n    const d = new Date();\r\n    const year = d.getFullYear();\r\n    const month = d.getMonth()+1;\r\n    const date = d.getDate();\r\n    const today = year + \". \" + month + \". \" + date + \".\"; \r\n    const strArray = today.split('.');\r\n\r\n    // 오늘의 감정, 이 달의 감정 갯수\r\n    let joyCount = 0, rageCount = 0, sadCount = 0, delightCount = 0, loveCount = 0, hateCount = 0,\r\n        desireCount = 0, commonCount = 0, othersCount = 0;\r\n    let joyCountMonthly = 0, rageCountMonthly = 0, sadCountMonthly = 0, delightCountMonthly = 0,\r\n        loveCountMonthly = 0, hateCountMonthly = 0, desireCountMonthly = 0, commonCountMonthly = 0, othersCountMonthly = 0;\r\n\r\n    props.diaries.forEach(diary => {\r\n        if(diary.dateforDiary === today){\r\n            if(diary.emotion === \"기쁨\")\r\n                joyCount++;\r\n            else if(diary.emotion === \"분노\")\r\n                rageCount++;\r\n            else if(diary.emotion === \"슬픔\")\r\n                sadCount++;\r\n            else if(diary.emotion === \"즐거움\")\r\n                delightCount++;\r\n            else if(diary.emotion === \"사랑\")\r\n                loveCount++;\r\n            else if(diary.emotion === \"미움\")\r\n                hateCount++;\r\n            else if(diary.emotion === \"바람\")\r\n                desireCount++;\r\n            else if(diary.emotion === \"무난\")\r\n                commonCount++;\r\n            else if(diary.emotion === \"기타\")\r\n                othersCount++;\r\n        }\r\n    });\r\n\r\n    props.diaries.forEach(diary => {\r\n        let diaryStrArray = diary.dateforDiary.split('.');\r\n        if(diaryStrArray[1] === strArray[1]){\r\n            if(diary.emotion === \"기쁨\")\r\n                joyCountMonthly++;\r\n            else if(diary.emotion === \"분노\")\r\n                rageCountMonthly++;\r\n            else if(diary.emotion === \"슬픔\")\r\n                sadCountMonthly++;\r\n            else if(diary.emotion === \"즐거움\")\r\n                delightCountMonthly++;\r\n            else if(diary.emotion === \"사랑\")\r\n                loveCountMonthly++;\r\n            else if(diary.emotion === \"미움\")\r\n                hateCountMonthly++;\r\n            else if(diary.emotion === \"바람\")\r\n                desireCountMonthly++;\r\n            else if(diary.emotion === \"무난\")\r\n                commonCountMonthly++;\r\n            else if(diary.emotion === \"기타\")\r\n                othersCountMonthly++;\r\n        }\r\n    });\r\n    \r\n    // 프로필 사진 수정\r\n    const loadFile = (e) => {\r\n        console.log(e.target.files[0]);\r\n        setImageURL(URL.createObjectURL(e.target.files[0]));\r\n        console.log(imageURL);\r\n    };\r\n\r\n    // 닉네임 수정 버튼 클릭 시 호출\r\n    const showEdit = () => {\r\n        document.getElementById(\"editInput\").style.display = \"block\";\r\n        document.getElementById(\"editButton\").style.display = \"block\";\r\n        document.getElementById(\"cancelButton\").style.display = \"block\";\r\n    };\r\n\r\n    // 닉네임 수정\r\n    const editNickname = () => {\r\n        setNickname(document.getElementById(\"editInput\").value);\r\n        document.getElementById(\"editInput\").style.display = \"none\";\r\n        document.getElementById(\"editButton\").style.display = \"none\";\r\n        document.getElementById(\"cancelButton\").style.display = \"none\";\r\n    };\r\n\r\n    // 닉네임 수정 취소\r\n    const cancel = () => {\r\n        document.getElementById(\"editInput\").style.display = \"none\";\r\n        document.getElementById(\"editButton\").style.display = \"none\";\r\n        document.getElementById(\"cancelButton\").style.display = \"none\";\r\n    };\r\n\r\n    return (\r\n        <ProfileBlock>\r\n            <Photo>\r\n                <div className=\"imageBlock\">\r\n                    <label htmlFor=\"chooseFile\"><img src={imageURL} className=\"profilePhoto\" alt=\"프로필 사진\"></img></label>\r\n                </div>\r\n                <input type=\"file\" id=\"chooseFile\" onChange={loadFile}/>\r\n            </Photo>\r\n            <Nickname>\r\n                <h2>{nickname}</h2>\r\n                <Edit>\r\n                    <BsPencil className=\"editIcon\" onClick={showEdit}/>\r\n                    <input id=\"editInput\"/>\r\n                    <button id=\"editButton\" onClick={editNickname}>수정</button>\r\n                    <button id=\"cancelButton\" onClick={cancel}>취소</button>\r\n                </Edit>\r\n            </Nickname>\r\n            <h4 className=\"title\">오늘의 감정</h4>\r\n            <EmotionBlock>\r\n                <Emotion>\r\n                    <div className=\"emotion joy\">기쁨</div>\r\n                    <h6 className=\"joy-count\">{joyCount}</h6>\r\n                </Emotion>\r\n                <Emotion>\r\n                    <div className=\"emotion rage\">분노</div>\r\n                    <h6 className=\"rage-count\">{rageCount}</h6>\r\n                </Emotion>\r\n                <Emotion>\r\n                    <div className=\"emotion sad\">슬픔</div>\r\n                    <h6 className=\"sad-count\">{sadCount}</h6>\r\n                </Emotion>\r\n                <Emotion>\r\n                    <div className=\"emotion delight\">즐거움</div>\r\n                    <h6 className=\"delight-count\">{delightCount}</h6>\r\n                </Emotion>\r\n                <Emotion>\r\n                    <div className=\"emotion love\">사랑</div>\r\n                    <h6 className=\"love-count\">{loveCount}</h6>\r\n                </Emotion>\r\n            </EmotionBlock>\r\n            <EmotionBlock>\r\n                <Emotion>\r\n                    <div className=\"emotion hate\">미움</div>\r\n                    <h6 className=\"hate-count\">{hateCount}</h6>\r\n                </Emotion>\r\n                <Emotion>\r\n                    <div className=\"emotion desire\">바람</div>\r\n                    <h6 className=\"desire-count\">{desireCount}</h6>\r\n                </Emotion>\r\n                <Emotion>\r\n                    <div className=\"emotion common\">무난</div>\r\n                    <h6 className=\"common-count\">{commonCount}</h6>\r\n                </Emotion>\r\n                <Emotion>\r\n                    <div className=\"emotion others\">기타</div>\r\n                    <h6 className=\"others-count\">{othersCount}</h6>\r\n                </Emotion>\r\n            </EmotionBlock>\r\n            <h4 className=\"title\">이 달의 감정</h4>\r\n            <EmotionBlock>\r\n                <Emotion>\r\n                    <div className=\"emotion joy\">기쁨</div>\r\n                    <h6 className=\"joy-count\">{joyCountMonthly}</h6>\r\n                </Emotion>\r\n                <Emotion>\r\n                    <div className=\"emotion rage\">분노</div>\r\n                    <h6 className=\"rage-count\">{rageCountMonthly}</h6>\r\n                </Emotion>\r\n                <Emotion>\r\n                    <div className=\"emotion sad\">슬픔</div>\r\n                    <h6 className=\"sad-count\">{sadCountMonthly}</h6>\r\n                </Emotion>\r\n                <Emotion>\r\n                    <div className=\"emotion delight\">즐거움</div>\r\n                    <h6 className=\"delight-count\">{delightCountMonthly}</h6>\r\n                </Emotion>\r\n                <Emotion>\r\n                    <div className=\"emotion love\">사랑</div>\r\n                    <h6 className=\"love-count\">{loveCountMonthly}</h6>\r\n                </Emotion>\r\n            </EmotionBlock>\r\n            <EmotionBlock>\r\n                <Emotion>\r\n                    <div className=\"emotion hate\">미움</div>\r\n                    <h6 className=\"hate-count\">{hateCountMonthly}</h6>\r\n                </Emotion>\r\n                <Emotion>\r\n                    <div className=\"emotion desire\">바람</div>\r\n                    <h6 className=\"desire-count\">{desireCountMonthly}</h6>\r\n                </Emotion>\r\n                <Emotion>\r\n                    <div className=\"emotion common\">무난</div>\r\n                    <h6 className=\"common-count\">{commonCountMonthly}</h6>\r\n                </Emotion>\r\n                <Emotion>\r\n                    <div className=\"emotion others\">기타</div>\r\n                    <h6 className=\"others-count\">{othersCountMonthly}</h6>\r\n                </Emotion>\r\n            </EmotionBlock>\r\n        </ProfileBlock>\r\n    );\r\n}\r\n\r\nexport default Profile;","/* DiaryTemplate : 일기 관련 내용이 출력되는 부분 */\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n// style //\r\nconst DiaryTemplateBlock = styled.div`\r\n    width: 900px;\r\n    height: 1700px;\r\n    margin: 20px 20px 20px 0px;\r\n    background: #FFFFFF;\r\n    border: 1px solid #DEE2E6;\r\n    box-shadow: 1px 1px 5px rgba(0, 0, 0, .08);\r\n    overflow-y: auto;\r\n\r\n    @media screen and (max-width: 768px) {\r\n        width: auto;\r\n        margin: 20px;\r\n    }\r\n`;\r\n\r\n// function //\r\nfunction DiaryTemplate({ children }) {\r\n    return (\r\n        <DiaryTemplateBlock>\r\n            {children}\r\n        </DiaryTemplateBlock>\r\n    );\r\n}\r\n\r\nexport default DiaryTemplate;","/* DiaryDate : 날짜를 선택하고 선택한 날짜값을 다른 component에 전달하는 component */\r\nimport React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { IoIosArrowBack, IoIosArrowForward } from \"react-icons/io\";\r\n\r\n// style //\r\nconst DiaryDateBlock = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    padding-bottom: 10px;\r\n\r\n    .back-arrow {\r\n        display: block;\r\n        margin: 2px 30px 0px 0px;\r\n        font-size: 35px;\r\n\r\n        &:hover {\r\n            cursor: pointer;\r\n            background: #FFDADA;\r\n            border-radius: 50%;\r\n            color: #E98580;\r\n        }\r\n    }\r\n\r\n    .date {\r\n        margin-top: 0px;\r\n        font-family: \"barunpenB\";\r\n        font-size: 30px;\r\n    }\r\n\r\n    .forward-arrow {\r\n        margin: 2px 0px 0px 30px;\r\n        font-size: 35px;\r\n\r\n        &:hover {\r\n            cursor: pointer;\r\n            background: #FFDADA;\r\n            border-radius: 50%;\r\n            color: #E98580;\r\n        }\r\n    }\r\n\r\n    @media screen and (max-width: 992px) {\r\n        .back-arrow { font-size: 29px; }\r\n        .date { font-size: 27px; }\r\n        .forward-arrow { font-size: 29px; }\r\n    }\r\n\r\n    @media screen and (max-width: 768px) {\r\n        \r\n    }\r\n`;\r\n\r\n// function //\r\nfunction DiaryDate(props) {\r\n    const d = new Date();\r\n    const [year, setYear] = useState(d.getFullYear());\r\n    const [month, setMonth] = useState(d.getMonth()+1);\r\n    const [date, setDate] = useState(d.getDate());\r\n    let today = year + \". \" + month + \". \" + date + \".\";\r\n    \r\n    // 선택한 날짜를 다른 component로 전달하는 함수\r\n    const setToday = () => {\r\n        props.getToday(today);\r\n    };\r\n\r\n    // 선택한 날짜가 달라질 때마다 today를 설정해야 하므로 useEffect 사용\r\n    useEffect(()=>{\r\n        setToday(today);\r\n    }, [today]);\r\n    \r\n    // 이후 날짜를 선택하는 함수\r\n    const onIncrease = () => {\r\n        if(month===12&&date===31){\r\n            setYear(year+1);\r\n            setMonth(1);\r\n            setDate(1);\r\n        }\r\n        else if((month===1&&date===31) || (month===2&&date===28) || (month===2&&date===29) || (month===3&&date===31) \r\n            || (month===4&&date===30) || (month===5&&date===31) || (month===6&&date===30) || (month===7&&date===31) \r\n            || (month===8&&date===31)|| (month===9&&date===30) || (month===10&&date===31) || (month===11&&date===30)){\r\n            setMonth(month+1);\r\n            setDate(1);\r\n        }\r\n        else\r\n            setDate(date+1);\r\n    };\r\n\r\n    // 이전 날짜를 선택하는 함수. 윤년 적용 필수.\r\n    const onDecrease = () => {\r\n        if(month===1&&date===1){\r\n            setYear(year-1); setMonth(12); setDate(31);\r\n        }\r\n        else if((month===2&&date===1) || (month===4&&date===1) || (month===6&&date===1) || (month===8&&date===1)\r\n            || (month===9&&date===1) || (month===11&&date===1)){\r\n            setMonth(month-1);\r\n            setDate(31);\r\n        }\r\n        else if((month===5&&date===1) || (month===7&&date===1) || (month===10&&date===1) || (month===12&&date===1)){\r\n            setMonth(month-1);\r\n            setDate(30);\r\n        }\r\n        else if(month===3&&date===1){\r\n            if((year%4===0&&year%100!==0) || year%400===0){  //윤년\r\n                setMonth(month-1);\r\n                setDate(29);\r\n            }\r\n            else{\r\n                setMonth(month-1);\r\n                setDate(28);\r\n            }\r\n        }\r\n        else\r\n            setDate(date-1);\r\n    };\r\n\r\n    return (\r\n        <DiaryDateBlock>\r\n            <IoIosArrowBack className=\"back-arrow\" onClick={onDecrease}/>\r\n            <h2 className=\"date\">{today}</h2>\r\n            <IoIosArrowForward className=\"forward-arrow\" onClick={onIncrease}/>\r\n        </DiaryDateBlock>\r\n    );\r\n}\r\n\r\nexport default DiaryDate;","/* DiaryHeader : MainPage에서 날짜 선택 부분 및 입력 버튼이 있는 header */\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { BsPencilSquare } from \"react-icons/bs\";\r\nimport DiaryDate from './DiaryDate';\r\n\r\n//style//\r\nconst DiaryHeaderBlock = styled.div`\r\n    height: 200px;\r\n    padding: 40px 30px 5px 30px;\r\n    margin-bottom: 10px;\r\n    background: #FFFFFF;\r\n    border-bottom: 1px solid #CED4DA;\r\n    text-align: center;\r\n`;\r\n\r\nconst DiaryButton = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 60px;\r\n    padding: 20px 0px;\r\n    background: #FFFFFF;\r\n    border: 1px solid #CED4DA;\r\n    text-align: center;\r\n    font-family: \"barunpenR\";\r\n    color: #BBBBBB;\r\n\r\n    .note-icon {\r\n        margin: 0px 20px 0px 0px;\r\n        font-size: 25px;\r\n    }\r\n\r\n    h3 {\r\n        margin-top: 20px;\r\n        font-size: 22px;\r\n    }\r\n\r\n    &:hover {\r\n        cursor: pointer;\r\n        background: #F0E5D8;\r\n        border: 1px solid #F0E5D8;\r\n        color: #FFFFFF;\r\n    }\r\n\r\n    @media screen and (max-width: 992px) {\r\n        .note-icon { font-size: 23px; }\r\n        h3 { font-size: 20px; }\r\n    }\r\n`;\r\n\r\n// function //\r\nfunction DiaryHeader(props) {\r\n    return (\r\n    <DiaryHeaderBlock>\r\n        <DiaryDate getToday={props.getToday}/>\r\n        <Link to=\"/Input\">\r\n            <DiaryButton>\r\n                <BsPencilSquare className=\"note-icon\"/>\r\n                <h3>오늘은 어떤 일이 있었나요?</h3>\r\n            </DiaryButton>\r\n        </Link>\r\n    </DiaryHeaderBlock>\r\n    );\r\n}\r\n\r\nexport default DiaryHeader;","/* DiaryItem : 일기 내용을 간략하게 요약한 component. 리스트로 출력되며 overflow 시 scroll */\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { BsTrash } from \"react-icons/bs\";\r\n\r\n// style //\r\nconst DiaryItemBlock = styled.div`\r\n    display: flex;\r\n    position: relative;\r\n    width: 93%;\r\n    margin: 20px auto;\r\n    background: #FFFFFF;\r\n    border: 1px solid #ced4da;\r\n\r\n    .remove {\r\n        display: block;\r\n        position: absolute;\r\n        left: 97%;\r\n        top: -10px;\r\n        width: 50px;\r\n        height: 30px;\r\n        opacity: 0;\r\n        color: #C2B8A3;\r\n\r\n        &:hover {\r\n            filter: brightness(90%);\r\n        }\r\n    }\r\n\r\n    &:hover {\r\n        cursor: pointer;\r\n        border: 3px solid #EAE3C8;\r\n\r\n        .remove {\r\n            opacity: 1;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Emotion = styled.div`\r\n    width: 28%;\r\n    background: #FFFFFF;\r\n    border-right: 1px solid #ced4da;\r\n    text-align: center;\r\n\r\n    h3 {\r\n        width: 30px;\r\n        padding: 30px;\r\n        margin: 60px auto 15px auto;\r\n        background: #FFEDA3;\r\n        border-radius: 50%;\r\n        color: #FFA900;\r\n    }\r\n\r\n    span {\r\n        display: inline-block;\r\n        padding: 10px;\r\n        margin-bottom: 5px;\r\n        border: 1px solid #CED4DA;\r\n        border-radius: 40%;\r\n    }\r\n\r\n    .first-emotion {\r\n        margin-right: 10px;\r\n    }\r\n\r\n    .second-emotion {\r\n        margin-right: 0px;\r\n    }\r\n\r\n    @media screen and (max-width: 992px) {\r\n        h3 {\r\n            width: 25px;\r\n            padding: 25px;\r\n            font-size: 16px; \r\n        }\r\n        span {\r\n            padding: 8px;\r\n            font-size: 14px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst DiaryContent = styled.div`\r\n    width: 72%;\r\n    padding: 20px 20px 8px 20px;\r\n    text-overflow: ellipsis;\r\n\r\n    .title {\r\n        margin: 0px 0px 5px 0px;\r\n        font-family: \"barunpenB\";\r\n        font-size: 18px;\r\n        color: #A0937D;\r\n    }\r\n\r\n    .description {\r\n        width: auto;\r\n        margin: 0px 0px 12px 0px;\r\n        padding: 7px;\r\n        border: 1px solid #ced4da;\r\n        overflow: hidden;\r\n        white-space: nowrap;\r\n        font-family: \"barunpenB\";\r\n        font-size: 16px;\r\n        text-overflow: ellipsis;\r\n    }\r\n\r\n    @media screen and (max-width: 992px) {\r\n        .title {\r\n            font-size: 16px;\r\n        }\r\n        \r\n        .description {\r\n            font-size: 14px;\r\n        }\r\n    }\r\n`;\r\n\r\n// function //\r\nfunction DiaryItem({diary, onRemove}) {\r\n    // 감정별로 색이 다르므로 style 변수로 지정 //\r\n    let style = {\r\n        background: \"#FFEDA3\",\r\n        color: \"#FFA900\"\r\n    };\r\n\r\n    if(diary.emotion === \"기쁨\")\r\n        style={background: \"#FFEDA3\", color: \"#FFA900\"};\r\n    else if(diary.emotion === \"분노\")\r\n        style={background: \"#FFDCB8\", color: \"#FF7600\"};\r\n    else if(diary.emotion === \"슬픔\")\r\n        style={background: \"#CDF0EA\", color: \"#4B778D\"};\r\n    else if(diary.emotion === \"즐거움\")\r\n        style={background: \"#CCF6C8\", color: \"#558776\"};\r\n    else if(diary.emotion === \"사랑\")\r\n        style={background: \"#FFDDCC\", color: \"#FF616D\"};\r\n    else if(diary.emotion === \"미움\")\r\n        style={background: \"#E7E6E1\", color: \"#868E96\"};\r\n    else if(diary.emotion === \"바람\")\r\n        style={background: \"#FFE6E6\", color: \"#E98580\"};\r\n    else if(diary.emotion === \"무난\")\r\n        style={background: \"#E7D4B5\", color: \"#7D5A50\"};\r\n    else if(diary.emotion === \"기타\")\r\n        style={background: \"#FFF5DA\", color: \"#C68B59\"};\r\n\r\n    return(\r\n        <DiaryItemBlock>\r\n            <Link to=\"/\"><BsTrash className=\"remove\" onClick={()=>onRemove(diary.id)}>삭제</BsTrash></Link>\r\n            <Emotion>\r\n                <h3 style={style}>{diary.emotion}</h3>\r\n                <span className=\"first-emotion\">{diary.subEmotion[0]}</span>\r\n                <span className=\"second-emotion\">{diary.subEmotion[1]}</span>\r\n            </Emotion>\r\n            <DiaryContent>\r\n                <h4 className=\"title\">상황</h4>\r\n                <h6 className=\"description\">{diary.situation}</h6>\r\n                <h4 className=\"title\">감정의 이유</h4>\r\n                <h6 className=\"description\">{diary.reason}</h6>\r\n                <h4 className=\"title\">마음에 새기기</h4>\r\n                <h6 className=\"description\">{diary.decision}</h6>\r\n            </DiaryContent>\r\n        </DiaryItemBlock>\r\n    );\r\n}\r\n\r\nexport default DiaryItem;","/* MainPage : 해당 날짜의 일기를 한 눈에 보여주는 메인 페이지 */ \r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport styled from 'styled-components';\r\nimport Header from '../components/Header';\r\nimport InnerTemplate from '../components/InnerTemplate';\r\nimport Profile from '../components/Profile';\r\nimport DiaryTemplate from '../components/DiaryTemplate';\r\nimport DiaryHeader from '../components/DiaryHeader';\r\nimport DiaryItem from '../components/DiaryItem';\r\n\r\n// style //\r\nconst flexStyle = {\r\n    display: \"flex\"\r\n};\r\n\r\nconst DiaryList = styled.div`\r\n    flex: 1;\r\n    height: 1440px;\r\n    padidng: 30px;\r\n    overflow-y: auto;\r\n`;\r\n\r\n// function //\r\nfunction MainPage(props) {\r\n    const diaries = props.diaries;\r\n\r\n    const d = new Date();\r\n    const year = d.getFullYear();\r\n    const month = d.getMonth()+1;\r\n    const date = d.getDate();\r\n    const initialToday = year + \". \" + month + \". \" + date + \".\";\r\n    const [today, setToday] = useState(initialToday);\r\n\r\n    // header 부분에서 날짜값을 전달받는 함수 //\r\n    const getToday = (text) => {\r\n        setToday(text);\r\n    }\r\n\r\n    const isMobile = useMediaQuery({\r\n        query : \"(max-width: 768px)\"\r\n    });\r\n\r\n    const isTablet = useMediaQuery({\r\n        query : \"(min-width: 768px) and (max-width: 992px)\"\r\n    });\r\n\r\n    const isPC = useMediaQuery({\r\n        query : \"(min-width: 992px)\"\r\n    });\r\n\r\n    return(\r\n        <>\r\n            {(isTablet || isPC) && \r\n            <>\r\n            <Header/>\r\n            <InnerTemplate>\r\n                <div style={flexStyle}>\r\n                    <Profile {...props} />\r\n                    <DiaryTemplate>\r\n                        <DiaryHeader getToday={getToday}/>\r\n                        <DiaryList>\r\n                            {diaries.map(diary => today === diary.dateforDiary ? <Link to={{\r\n                                key : diary.id,\r\n                                pathname: '/detail/'+diary.id,\r\n                                state: {diaries}\r\n                            }}><DiaryItem key={diary.id} diary={diary} onRemove={props.onRemove}/></Link> : \"\")}\r\n                        </DiaryList>\r\n                    </DiaryTemplate>\r\n                </div>\r\n            </InnerTemplate>\r\n            <footer>\r\n                <p>Copyright© Je yeong eun. All rights Reserved.</p>\r\n            </footer>\r\n            </>}\r\n            {isMobile &&\r\n            <> \r\n            <Header/>\r\n            <InnerTemplate>\r\n                <Profile {...props} />\r\n                <DiaryTemplate>\r\n                    <DiaryHeader getToday={getToday}/>\r\n                    <DiaryList>\r\n                        {diaries.map(diary => today === diary.dateforDiary ? <Link to={{\r\n                            key : diary.id,\r\n                            pathname: '/detail/'+diary.id,\r\n                            state: {diaries}\r\n                        }}><DiaryItem key={diary.id} diary={diary} onRemove={props.onRemove}/></Link> : \"\")}\r\n                    </DiaryList>\r\n                </DiaryTemplate>\r\n            </InnerTemplate>\r\n            <footer>\r\n                <p>Copyright© Je yeong eun. All rights Reserved.</p>\r\n            </footer>\r\n            </>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MainPage;","/* InputDiary : 새로운 일기 입력 */\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport DiaryDate from './DiaryDate';\r\n\r\n//style//\r\nconst InputDairyBlock = styled.div`\r\n    height: 1615px;\r\n    padding: 40px;\r\n    background: #FFFFFF;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst DiaryEmotion = styled.div`\r\n    padding-top: 10px;\r\n\r\n    .my-emotion{\r\n        font-family: \"barunpenB\";\r\n        font-size: 21px;\r\n        margin-right: 30px;\r\n    }\r\n\r\n    .emotion-name {\r\n       display: inline-block;\r\n       padding: 8px 50px;\r\n       border: 1px solid #CED4DA;\r\n       font-family: \"barunpenR\";\r\n       font-size: 18px;\r\n    }\r\n\r\n    .sub-emotion-name {\r\n        margin: 10px 0px 0px 100px;\r\n        padding: 8px 30px;\r\n        border: 1px solid #CED4DA;\r\n        font-size: 16px;\r\n    }\r\n\r\n    @media screen and (max-width: 992px) {\r\n        .my-emotion { font-size: 18px; }\r\n        .emotion-name { padding: 5px 40px; font-size: 16px; }\r\n        .sub-emotion-name { padding: 5px 20px; margin-left: 90px; font-size: 14px;}\r\n    }\r\n\r\n    @media screen and (max-width: 768px) {\r\n        .my-emotion { font-size: 19px; }\r\n        .emotion-name { padding: 5px 50px; font-size: 18px; }\r\n        .sub-emotion-name { padding: 5px 20px; margin-left: 95px; font-size: 15px;}\r\n    }\r\n`;\r\n\r\nconst MainEmotion = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    font-family: \"barunpenB\";\r\n\r\n    .emotion {\r\n        padding: 20px;\r\n        margin: 20px 20px 20px 0px;\r\n        border-radius: 50%;\r\n        \r\n        &:hover {\r\n            cursor: pointer;\r\n            filter: brightness(97%);\r\n        }\r\n    }\r\n\r\n    .joy {\r\n        background: #FFEDA3;\r\n        color: #FFA900;\r\n    }\r\n\r\n    .rage {\r\n        background: #FFDCB8;\r\n        color: #FF7600;\r\n    }\r\n\r\n    .sad {\r\n        background: #CDF0EA;\r\n        color: #4B778D;\r\n    }\r\n\r\n    .delight {\r\n        padding: 20px 15px;\r\n        background: #CCF6C8;\r\n        color: #558776;\r\n    }\r\n\r\n    .love {\r\n        background: #FFDDCC;\r\n        color: #FF616D;\r\n    }\r\n\r\n    .hate {\r\n        background: #E7E6E1;\r\n        color: #868E96;\r\n    }\r\n\r\n    .desire {\r\n        background: #FFE6E6;\r\n        color: #E98580;\r\n    }\r\n\r\n    .common {\r\n        background: #E7D4B5;\r\n        color: #7D5A50;\r\n    }\r\n\r\n    .others {\r\n        background: #FFF5DA;\r\n        color: #C68B59;\r\n    }\r\n\r\n    @media screen and (max-width: 1430px) {\r\n        .emotion {\r\n            padding: 15px;\r\n            margin-right: 13px;\r\n            font-size: 14px;\r\n        }\r\n    }\r\n\r\n    @media screen and (max-width: 1200px) {\r\n        .emotion {\r\n            padding: 12px;\r\n            margin-right: 8px;\r\n            font-size: 11px;\r\n        }\r\n    }\r\n\r\n    @media screen and (max-width: 992px) {\r\n        .emotion {\r\n            padding: 10px;\r\n            margin-right: 5px;\r\n            font-size: 11px;\r\n        }\r\n    }\r\n\r\n    @media screen and (max-width: 768px) {\r\n        .emotion {\r\n            padding: 12px;\r\n            margin-right: 10px;\r\n            font-size: 12px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst DetailEmotion = styled.div`\r\n    padding-bottom: 15px;\r\n    border-bottom: 1px solid #CED4DA;\r\n    text-align: center;\r\n\r\n    span {\r\n        display: inline-block;\r\n        padding: 10px;\r\n        margin: 0px 10px 15px 0px;\r\n        border: 1px solid #CED4DA;\r\n        border-radius: 40%;\r\n\r\n        &:hover {\r\n            cursor: pointer;\r\n            background: #F0E5D8;\r\n            border: 1px solid #F0E5D8;\r\n        }\r\n    }\r\n\r\n    span:last-child {\r\n        margin-right: 0px;\r\n    }\r\n\r\n    @media screen and (max-width: 992px) {\r\n        span {\r\n            padding: 8px;\r\n            font-size: 12px; \r\n        }\r\n    }\r\n\r\n    @media screen and (max-width: 768px) {\r\n        span {\r\n            padding: 9px;\r\n            font-size: 13px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst InputForm = styled.div`\r\n    padding: 15px 8px 0px 0px;\r\n    \r\n    .title {\r\n        margin-bottom: 12px;\r\n        font-family: \"barunpenB\";\r\n        font-size: 21px;   \r\n    }\r\n\r\n    .description {\r\n        width: 100%;\r\n        height: 100px;\r\n        margin-bottom: 15px;\r\n        resize: none;\r\n        font-family: \"barunpenR\";\r\n        font-size: 16px;\r\n        line-height: 1.3em;\r\n        border: 1px solid #CED4DA;\r\n    }\r\n\r\n    @media screen and (max-width: 992px) {\r\n        .title { font-size: 18px; }\r\n    }\r\n\r\n    @media screen and (max-width: 768px) {\r\n        .title { font-size: 19px; }\r\n    }\r\n`;\r\n\r\nconst SubmitButton = styled.div`\r\n    width: 150px;\r\n    margin: 30px auto;\r\n    padding: 12px; \r\n    background: #FAEBE0;\r\n    border-radius: 5px;\r\n    font-family: \"barunpenB\";\r\n    font-size: 21px;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        cursor: pointer;\r\n        filter: brightness(97%);\r\n    }\r\n\r\n    @media screen and (max-width: 992px) {\r\n        width: 120px;\r\n        padding: 10px;\r\n    }\r\n`;\r\n\r\n// 세부감정 array //\r\nconst emotionArray = [\r\n    {\r\n        main: \"기쁨\",\r\n        sub: [\"감동적인\", \"감사한\", \"고무적인\", \"기쁜\", \"낙천적인\", \"날아갈 듯한\", \"놀라운\", \"눈물겨운\", \"환상적인\",\r\n                \"만족스러운\", \"뭉클한\", \"뿌듯한\", \"짜릿한\", \"통쾌한\", \"포근한\", \"행복한\", \"후련한\", \"흐뭇한\", \"흥분된\"]\r\n    },\r\n    {\r\n        main: \"분노\",\r\n        sub: [\"고통스러운\", \"골치 아픈\", \"괘씸한\", \"기분 상하는\", \"끓어오르는\", \"나쁜\", \"모욕적인\", \"증오하는\",\r\n                \"복수심이 불타는\", \"불만스러운\", \"불쾌한\", \"섬뜩한\", \"속상한\", \"실망한\", \"씁쓸한\", \"약 오르는\"]\r\n    },\r\n    {\r\n        main: \"슬픔\",\r\n        sub: [\"슬픈\", \"염려하는\", \"창피한\", \"공허한\", \"실망한\", \"외로운\", \"멍한\", \"미어지는\",\r\n                \"불쌍한\", \"불행한\", \"비참한\", \"우울한\", \"섭섭한\", \"소외감이 드는\", \"아쉬운\", \"암담한\"]\r\n    },\r\n    {\r\n        main: \"즐거움\",\r\n        sub: [\"가벼운\", \"경쾌한\", \"기분좋은\", \"명랑한\", \"상쾌한\", \"신나는\", \"당당한\", \"편안한\", \"홀가분한\",\r\n                \"확신있는\", \"흐뭇한\", \"희망찬\", \"흥분된\", \"즐거운\", \"숨가쁜\"]\r\n    },\r\n    {\r\n        main: \"사랑\",\r\n        sub: [\"감미로운\", \"감사하는\", \"그리운\", \"다정한\", \"따사로운\", \"묘한\", \"사랑스러운\", \"상냥한\",\r\n                \"순수한\", \"애틋한\", \"열렬한\", \"친숙한\", \"포근한\", \"호감이 가는\", \"부끄러운\"]\r\n    },\r\n    {\r\n        main: \"미움\",\r\n        sub: [\"괴로운\", \"짜증나는\", \"귀찮은\", \"근심스러운\", \"끔찍한\", \"몸서리치는\", \"지겨운\", \"미운\",\r\n                \"부담스러운\", \"서운한\", \"싫은\", \"얄미운\", \"억울한\", \"원망스러운\", \"죄책감드는\",]\r\n    },\r\n    {\r\n        main: \"바람\",\r\n        sub: [\"간절한\", \"기대하는\", \"바라는\", \"소망하는\", \"애끓는\", \"절박한\", \"초라한\", \"초조한\",\r\n                \"호기심있는\", \"후회스러운\", \"희망하는\"]\r\n    },\r\n    {\r\n        main: \"무난\",\r\n        sub: [\"고요한\", \"담담한\", \"편안한\", \"무난한\", \"따분한\", \"무기력한\", \"태연한\", \"일상적인\",\r\n                \"따뜻한\", \"포근한\", \"졸린\", \"감성적인\"]\r\n    },\r\n    {\r\n        main: \"기타\",\r\n        sub: [\"무서운\", \"다행스러운\", \"부끄러운\", \"미안한\", \"민망한\", \"버거운\", \"불안한\", \"애매한\",\r\n                \"어색한\", \"어이없는\", \"조마조마한\"]\r\n    }\r\n];\r\n\r\n// function //\r\nfunction InputDiary({ inputs, onCreate }) {\r\n    const d = new Date();\r\n    const year = d.getFullYear();\r\n    const month = d.getMonth()+1;\r\n    const date = d.getDate();\r\n    const initialToday = year + \". \" + month + \". \" + date + \".\";\r\n    const [today, setToday] = useState(initialToday);\r\n\r\n    // main emotion / sub emotion //\r\n    const [currentIndex, setCurrentIndex] = useState(0);\r\n    const [currentEmotion, setCurrentEmotion] = useState(\"기쁨\");\r\n    const [currentSubEmotion, setCurrentSubEmotion] = useState(\"\");\r\n\r\n    // 입력한 내용은 inputs에 담아 App.js로 전달 //\r\n    inputs.dateforDiary = today;\r\n    inputs.emotion = currentEmotion;\r\n\r\n    // DiaryDate에서 날짜를 받아오는 함수 //\r\n    const getToday = (text) => {\r\n        setToday(text);\r\n    };\r\n\r\n    // main emotion 클릭 시 //\r\n    const onClickMainEmotion = (text, number) => {\r\n        setCurrentEmotion(text);\r\n        setCurrentIndex(number);\r\n        setCurrentSubEmotion(\"\");\r\n    };\r\n\r\n    // 입력한 내용을 inputs에 저장 //\r\n    const setSituation = (e) => {\r\n        inputs.situation = e.target.value;\r\n    };\r\n\r\n    const setReason = (e) => {\r\n        inputs.reason = e.target.value;\r\n    };\r\n\r\n    const setMyResponse = (e) => {\r\n        inputs.myResponse = e.target.value;\r\n    };\r\n\r\n    const setThoughts = (e) => {\r\n        inputs.thoughts = e.target.value;\r\n    };\r\n\r\n    const setArgument = (e) => {\r\n        inputs.argument = e.target.value;\r\n    };\r\n\r\n    const setDecision = (e) => {\r\n        inputs.decision = e.target.value;\r\n    };\r\n\r\n    return (\r\n        <InputDairyBlock>\r\n            <DiaryDate getToday={getToday}/>\r\n            <DiaryEmotion>\r\n                <span className=\"my-emotion\">나의 감정</span>\r\n                <span className=\"emotion-name\">{currentEmotion}</span>\r\n                <div className=\"sub-emotion-name\">{currentSubEmotion}</div>\r\n                <MainEmotion>\r\n                    <div className=\"emotion joy\" onClick={() => {onClickMainEmotion(\"기쁨\", 0);}}>기쁨</div>\r\n                    <div className=\"emotion rage\" onClick={() => {onClickMainEmotion(\"분노\", 1);}}>분노</div>\r\n                    <div className=\"emotion sad\" onClick={() => {onClickMainEmotion(\"슬픔\", 2);}}>슬픔</div>\r\n                    <div className=\"emotion delight\" onClick={() => {onClickMainEmotion(\"즐거움\", 3);}}>즐거움</div>\r\n                    <div className=\"emotion love\" onClick={() => {onClickMainEmotion(\"사랑\", 4);}}>사랑</div>\r\n                    <div className=\"emotion hate\" onClick={() => {onClickMainEmotion(\"미움\", 5);}}>미움</div>\r\n                    <div className=\"emotion desire\" onClick={() => {onClickMainEmotion(\"바람\", 6);}}>바람</div>\r\n                    <div className=\"emotion common\" onClick={() => {onClickMainEmotion(\"무난\", 7);}}>무난</div>\r\n                    <div className=\"emotion others\" onClick={() => {onClickMainEmotion(\"기타\", 8);}}>기타</div>\r\n                </MainEmotion>\r\n                <DetailEmotion>\r\n                    {emotionArray[currentIndex].sub.map(emo => <span onClick={()=>{inputs.subEmotion.push(emo); setCurrentSubEmotion(currentSubEmotion+emo+\" \")}}>{emo}</span>)}\r\n                </DetailEmotion>\r\n            </DiaryEmotion>\r\n            <InputForm>\r\n                    <h3 className=\"title\">상황</h3>\r\n                    <textarea className=\"description\" onBlur={setSituation}></textarea>\r\n                    <h3 className=\"title\">감정의 이유</h3>\r\n                    <textarea className=\"description\" onBlur={setReason}></textarea>\r\n                    <h3 className=\"title\">나의 반응</h3>\r\n                    <textarea className=\"description\" onBlur={setMyResponse}></textarea>\r\n                    <h3 className=\"title\">그 때의 생각</h3>\r\n                    <textarea className=\"description\" onBlur={setThoughts}></textarea>\r\n                    <h3 className=\"title\">생각 반박해보기</h3>\r\n                    <textarea className=\"description\" onBlur={setArgument}></textarea>\r\n                    <h3 className=\"title\">마음에 새기기</h3>\r\n                    <textarea className=\"description\" onBlur={setDecision}></textarea>\r\n            </InputForm>\r\n            <Link to=\"/\"><SubmitButton onClick={onCreate}>저장</SubmitButton></Link>\r\n        </InputDairyBlock>\r\n    );\r\n}\r\n\r\nexport default InputDiary;","/* InputFormPage : 일기를 새로 입력하는 페이지 */\r\nimport React from 'react';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport Header from '../components/Header';\r\nimport InnerTemplate from '../components/InnerTemplate';\r\nimport Profile from '../components/Profile';\r\nimport DiaryTemplate from '../components/DiaryTemplate';\r\nimport InputDiary from '../components/InputDiary';\r\n\r\n// style //\r\nconst flexStyle = {\r\n    display: \"flex\"\r\n};\r\n\r\n// function //\r\nfunction InputFormPage(props) {\r\n    const isMobile = useMediaQuery({\r\n        query : \"(max-width: 768px)\"\r\n    });\r\n\r\n    const isTablet = useMediaQuery({\r\n        query : \"(min-width: 768px) and (max-width: 992px)\"\r\n    });\r\n\r\n    const isPC = useMediaQuery({\r\n        query : \"(min-width: 992px)\"\r\n    });\r\n\r\n    return(\r\n        <>\r\n        {(isTablet || isPC) && \r\n        <>\r\n            <Header />\r\n            <InnerTemplate>\r\n                <div style={flexStyle}>\r\n                    <Profile {...props} />\r\n                    <DiaryTemplate>\r\n                        <InputDiary {...props} />\r\n                    </DiaryTemplate>\r\n                </div>\r\n            </InnerTemplate>\r\n            <footer>\r\n                <p>Copyright© Je yeong eun. All rights Reserved.</p>\r\n            </footer>\r\n        </>\r\n        }\r\n        {isMobile && \r\n        <>\r\n        <Header />\r\n            <InnerTemplate>\r\n                <Profile {...props} />\r\n                <DiaryTemplate>\r\n                    <InputDiary {...props} />\r\n                </DiaryTemplate>\r\n            </InnerTemplate>\r\n            <footer>\r\n                <p>Copyright© Je yeong eun. All rights Reserved.</p>\r\n            </footer>\r\n        </>\r\n        }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default InputFormPage;","/* Detail : DiaryItem을 클릭하면 나타나는 상세내용 */\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport DiaryDate from './DiaryDate';\r\n\r\n// style //\r\nconst DetailBlock = styled.div`\r\n    height: 1615px;\r\n    padding: 40px;\r\n    background: #FFFFFF;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst DiaryEmotion = styled.div`\r\n    padding-top: 10px;\r\n\r\n    .my-emotion{\r\n        font-family: \"barunpenB\";\r\n        font-size: 21px;\r\n        margin-right: 30px;\r\n    }\r\n\r\n    .emotion-name {\r\n       display: inline-block;\r\n       padding: 8px 50px;\r\n       border: 1px solid #CED4DA;\r\n       font-family: \"barunpenR\";\r\n       font-size: 18px;\r\n    }\r\n\r\n    .sub-emotion-name {\r\n        margin: 10px 0px 0px 100px;\r\n        padding: 8px 30px;\r\n        border: 1px solid #CED4DA;\r\n        font-size: 16px;\r\n    }\r\n\r\n    @media screen and (max-width: 992px) {\r\n        .my-emotion { font-size: 18px; }\r\n        .emotion-name { padding: 5px 40px; font-size: 16px; }\r\n        .sub-emotion-name { padding: 5px 20px; margin-left: 90px; font-size: 14px;}\r\n    }\r\n\r\n    @media screen and (max-width: 768px) {\r\n        .my-emotion { font-size: 19px; }\r\n        .emotion-name { padding: 5px 50px; font-size: 18px; }\r\n        .sub-emotion-name { padding: 5px 20px; margin-left: 95px; font-size: 15px;}\r\n    }\r\n`;\r\n\r\nconst MainEmotion = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    font-family: \"barunpenB\";\r\n\r\n    .emotion {\r\n        padding: 20px;\r\n        border-radius: 50%;\r\n        margin: 20px 20px 20px 0px;\r\n\r\n        &:hover {\r\n            cursor: pointer;\r\n            filter: brightness(97%);\r\n        }\r\n    }\r\n\r\n    .joy {\r\n        background: #FFEDA3;\r\n        color: #FFA900;\r\n    }\r\n\r\n    .rage {\r\n        background: #FFDCB8;\r\n        color: #FF7600;\r\n    }\r\n\r\n    .sad {\r\n        background: #CDF0EA;\r\n        color: #4B778D;\r\n    }\r\n\r\n    .delight {\r\n        padding: 20px 15px;\r\n        background: #CCF6C8;\r\n        color: #558776;\r\n    }\r\n\r\n    .love {\r\n        background: #FFDDCC;\r\n        color: #FF616D;\r\n    }\r\n\r\n    .hate {\r\n        background: #E7E6E1;\r\n        color: #868E96;\r\n    }\r\n\r\n    .desire {\r\n        background: #FFE6E6;\r\n        color: #E98580;\r\n    }\r\n\r\n    .common {\r\n        background: #E7D4B5;\r\n        color: #7D5A50;\r\n    }\r\n\r\n    .others {\r\n        background: #FFF5DA;\r\n        color: #C68B59;\r\n    }\r\n\r\n    @media screen and (max-width: 1430px) {\r\n        .emotion {\r\n            padding: 15px;\r\n            margin-right: 13px;\r\n            font-size: 14px;\r\n        }\r\n    }\r\n\r\n    @media screen and (max-width: 1200px) {\r\n        .emotion {\r\n            padding: 12px;\r\n            margin-right: 8px;\r\n            font-size: 11px;\r\n        }\r\n    }\r\n\r\n    @media screen and (max-width: 992px) {\r\n        .emotion {\r\n            padding: 10px;\r\n            margin-right: 5px;\r\n            font-size: 11px;\r\n        }\r\n    }\r\n\r\n    @media screen and (max-width: 768px) {\r\n        .emotion {\r\n            padding: 12px;\r\n            margin-right: 10px;\r\n            font-size: 12px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst DetailEmotion = styled.div`\r\n    text-align: center;\r\n    padding-bottom: 15px;\r\n    border-bottom: 1px solid #CED4DA;\r\n\r\n    span {\r\n        display: inline-block;\r\n        padding: 10px;\r\n        margin: 0px 10px 15px 0px;\r\n        border: 1px solid #CED4DA;\r\n        border-radius: 40%;\r\n\r\n        &:hover {\r\n            cursor: pointer;\r\n            background: #F0E5D8;\r\n            border: 1px solid #F0E5D8;\r\n        }\r\n    }\r\n\r\n    span:last-child {\r\n        margin-right: 0px;\r\n    }\r\n\r\n    @media screen and (max-width: 992px) {\r\n        span {\r\n            padding: 8px;\r\n            font-size: 12px; \r\n        }\r\n    }\r\n\r\n    @media screen and (max-width: 768px) {\r\n        span {\r\n            padding: 9px;\r\n            font-size: 13px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst InputForm = styled.div`\r\n    padding: 15px 8px 0px 0px;\r\n    \r\n    .title {\r\n        margin-bottom: 12px;\r\n        font-family: \"barunpenB\";\r\n        font-size: 21px; \r\n    }\r\n    .description {\r\n        width: 100%;\r\n        height: 100px;\r\n        margin-bottom: 15px;\r\n        resize: none;\r\n        font-family: \"barunpenR\";\r\n        font-size: 16px;\r\n        line-height: 1.3em;\r\n        border: 1px solid #CED4DA;\r\n    }\r\n\r\n    @media screen and (max-width: 992px) {\r\n        .title { font-size: 18px; }\r\n    }\r\n\r\n    @media screen and (max-width: 768px) {\r\n        .title { font-size: 19px; }\r\n    }\r\n`;\r\n\r\nconst ButtonBlock = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: 30px;\r\n`;\r\n\r\nconst Button = styled.div`\r\n    width: 80px;\r\n    margin-right: 30px;\r\n    padding: 10px 20px;\r\n    border-radius: 3px;\r\n    background: #FAEBE0;\r\n    font-family: \"barunpenB\";\r\n    font-size: 20px;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        cursor: pointer;\r\n        filter: brightness(97%);\r\n    }\r\n\r\n    @media screen and (max-width: 992px) {\r\n        width: 60px;\r\n        padding: 10px;\r\n        font-size: 18px;\r\n    }\r\n\r\n    @media screen and (max-width: 768px) {\r\n        width: 80px;\r\n        padding: 10px;\r\n        font-size: 19px;\r\n    }\r\n`;\r\n\r\n// 세부감정 array //\r\nconst emotionArray = [\r\n    {\r\n        main: \"기쁨\",\r\n        sub: [\"감동적인\", \"감사한\", \"고무적인\", \"기쁜\", \"낙천적인\", \"날아갈 듯한\", \"놀라운\", \"눈물겨운\", \"환상적인\",\r\n                \"만족스러운\", \"뭉클한\", \"뿌듯한\", \"짜릿한\", \"통쾌한\", \"포근한\", \"행복한\", \"후련한\", \"흐뭇한\", \"흥분된\"]\r\n    },\r\n    {\r\n        main: \"분노\",\r\n        sub: [\"고통스러운\", \"골치 아픈\", \"괘씸한\", \"기분 상하는\", \"끓어오르는\", \"나쁜\", \"모욕적인\", \"증오하는\",\r\n                \"복수심이 불타는\", \"불만스러운\", \"불쾌한\", \"섬뜩한\", \"속상한\", \"실망한\", \"씁쓸한\", \"약 오르는\"]\r\n    },\r\n    {\r\n        main: \"슬픔\",\r\n        sub: [\"슬픈\", \"염려하는\", \"창피한\", \"공허한\", \"실망한\", \"외로운\", \"멍한\", \"미어지는\",\r\n                \"불쌍한\", \"불행한\", \"비참한\", \"우울한\", \"섭섭한\", \"소외감이 드는\", \"아쉬운\", \"암담한\"]\r\n    },\r\n    {\r\n        main: \"즐거움\",\r\n        sub: [\"가벼운\", \"경쾌한\", \"기분좋은\", \"명랑한\", \"상쾌한\", \"신나는\", \"당당한\", \"편안한\", \"홀가분한\",\r\n                \"확신있는\", \"흐뭇한\", \"희망찬\", \"흥분된\", \"즐거운\", \"숨가쁜\"]\r\n    },\r\n    {\r\n        main: \"사랑\",\r\n        sub: [\"감미로운\", \"감사하는\", \"그리운\", \"다정한\", \"따사로운\", \"묘한\", \"사랑스러운\", \"상냥한\",\r\n                \"순수한\", \"애틋한\", \"열렬한\", \"친숙한\", \"포근한\", \"호감이 가는\", \"부끄러운\"]\r\n    },\r\n    {\r\n        main: \"미움\",\r\n        sub: [\"괴로운\", \"짜증나는\", \"귀찮은\", \"근심스러운\", \"끔찍한\", \"몸서리치는\", \"지겨운\", \"미운\",\r\n                \"부담스러운\", \"서운한\", \"싫은\", \"얄미운\", \"억울한\", \"원망스러운\", \"죄책감드는\",]\r\n    },\r\n    {\r\n        main: \"바람\",\r\n        sub: [\"간절한\", \"기대하는\", \"바라는\", \"소망하는\", \"애끓는\", \"절박한\", \"초라한\", \"초조한\",\r\n                \"호기심있는\", \"후회스러운\", \"희망하는\"]\r\n    },\r\n    {\r\n        main: \"무난\",\r\n        sub: [\"고요한\", \"담담한\", \"편안한\", \"무난한\", \"따분한\", \"무기력한\", \"태연한\", \"일상적인\",\r\n                \"따뜻한\", \"포근한\", \"졸린\", \"감성적인\"]\r\n    },\r\n    {\r\n        main: \"기타\",\r\n        sub: [\"무서운\", \"다행스러운\", \"부끄러운\", \"미안한\", \"민망한\", \"버거운\", \"불안한\", \"애매한\",\r\n                \"어색한\", \"어이없는\", \"조마조마한\"]\r\n    }\r\n];\r\n\r\n\r\n// function //\r\nfunction Detail(props) {\r\n    const id = props.match.params.id;   // URL로 넘겨준 Diary의 id값\r\n    const diaries = props.location.state.diaries;\r\n\r\n    // 현재 출력할 diary //\r\n    let currentDiary;\r\n    let subEmotion = \"\";\r\n    diaries.forEach(d => {if(d.id == id){currentDiary=d;}});\r\n    currentDiary.subEmotion.map(s => subEmotion += s + \" \");\r\n    props.location.state.inputs = currentDiary; // 수정할 때 inputs에 변경된 값을 넣어서 App.js로 전달\r\n\r\n    const d = new Date();\r\n    const year = d.getFullYear();\r\n    const month = d.getMonth()+1;\r\n    const date = d.getDate();\r\n    const initialToday = year + \". \" + month + \". \" + date + \".\";\r\n    const [today, setToday] = useState(initialToday);\r\n\r\n    const [currentIndex, setCurrentIndex] = useState(0);\r\n    const [currentEmotion, setCurrentEmotion] = useState(currentDiary.emotion);\r\n    const [currentSubEmotion, setCurrentSubEmotion] = useState(subEmotion);\r\n\r\n    // DiaryDate에서 날짜를 받아오는 함수 //\r\n    const getToday = (text) => {\r\n        setToday(text);\r\n    };\r\n\r\n    // main emotion 클릭 시 //\r\n    const onClickMainEmotion = (text, num) => {\r\n        setCurrentEmotion(text);\r\n        setCurrentIndex(num);\r\n        setCurrentSubEmotion(\"\");\r\n        currentDiary.emotion = currentEmotion;\r\n    };\r\n\r\n    const setSituation = (e) => {\r\n        currentDiary.situation = e.target.value;\r\n    }\r\n\r\n    const setReason = (e) => {\r\n        currentDiary.reason = e.target.value;\r\n    }\r\n\r\n    const setMyResponse = (e) => {\r\n        currentDiary.myResponse = e.target.value;\r\n    }\r\n\r\n    const setThoughts = (e) => {\r\n        currentDiary.thoughts = e.target.value;\r\n    }\r\n\r\n    const setArgument = (e) => {\r\n        currentDiary.argument = e.target.value;\r\n    }\r\n\r\n    const setDecision = (e) => {\r\n        currentDiary.decision = e.target.value;\r\n    }\r\n\r\n    return (\r\n        <DetailBlock>\r\n            <DiaryDate getToday={getToday}/>\r\n            <DiaryEmotion>\r\n            <span className=\"my-emotion\">나의 감정</span>\r\n                <span className=\"emotion-name\">{currentEmotion}</span>\r\n                <div className=\"sub-emotion-name\">{currentSubEmotion}</div>\r\n                <MainEmotion>\r\n                <div className=\"emotion joy\" onClick={()=>{onClickMainEmotion(\"기쁨\", 0)}}>기쁨</div>\r\n                    <div className=\"emotion rage\" onClick={()=>{onClickMainEmotion(\"분노\", 1)}}>분노</div>\r\n                    <div className=\"emotion sad\" onClick={()=>{onClickMainEmotion(\"슬픔\", 2)}}>슬픔</div>\r\n                    <div className=\"emotion delight\" onClick={()=>{onClickMainEmotion(\"즐거움\", 3)}}>즐거움</div>\r\n                    <div className=\"emotion love\" onClick={()=>{onClickMainEmotion(\"사랑\", 4)}}>사랑</div>\r\n                    <div className=\"emotion hate\" onClick={()=>{onClickMainEmotion(\"미움\", 5)}}>미움</div>\r\n                    <div className=\"emotion desire\" onClick={()=>{onClickMainEmotion(\"바람\", 6)}}>바람</div>\r\n                    <div className=\"emotion common\" onClick={()=>{onClickMainEmotion(\"무난\", 7)}}>무난</div>\r\n                    <div className=\"emotion others\" onClick={()=>{onClickMainEmotion(\"기타\", 8)}}>기타</div>\r\n                </MainEmotion>\r\n                <DetailEmotion>\r\n                    {emotionArray[currentIndex].sub.map(emo => <span onClick={()=>{currentDiary.subEmotion.push(emo); console.log(currentDiary.subEmotion); setCurrentSubEmotion(currentSubEmotion+emo+\" \")}}>{emo}</span>)}\r\n                </DetailEmotion>\r\n            </DiaryEmotion>\r\n            <InputForm>\r\n            <h3 className=\"title\">상황</h3>\r\n                    <textarea className=\"description\" onChange={setSituation} defaultValue={currentDiary.situation}></textarea>\r\n                    <h3 className=\"title\">감정의 이유</h3>\r\n                    <textarea className=\"description\" onChange={setReason} defaultValue={currentDiary.reason}></textarea>\r\n                    <h3 className=\"title\">나의 반응</h3>\r\n                    <textarea className=\"description\" onChange={setMyResponse} defaultValue={currentDiary.myResponse}></textarea>\r\n                    <h3 className=\"title\">그 때의 생각</h3>\r\n                    <textarea className=\"description\" onChange={setThoughts} defaultValue={currentDiary.thoughts}></textarea>\r\n                    <h3 className=\"title\">생각 반박해보기</h3>\r\n                    <textarea className=\"description\" onChange={setArgument} defaultValue={currentDiary.argument}></textarea>\r\n                    <h3 className=\"title\">마음에 새기기</h3>\r\n                    <textarea className=\"description\" onChange={setDecision} defaultValue={currentDiary.decision}></textarea>\r\n            </InputForm>\r\n            <ButtonBlock>\r\n                <Link to=\"/\"><Button onClick={props.onEdit}>수정</Button></Link>\r\n                <Link to=\"/\"><Button>홈으로</Button></Link>\r\n            </ButtonBlock>\r\n        </DetailBlock>\r\n    );\r\n}\r\n\r\nexport default Detail;","/* DetailPage : 일기를 선택하면 상세 페이지가 출력됨(수정 가능) */\r\nimport React from 'react';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport Header from '../components/Header';\r\nimport InnerTemplate from '../components/InnerTemplate';\r\nimport Profile from '../components/Profile';\r\nimport DiaryTemplate from '../components/DiaryTemplate';\r\nimport Detail from '../components/Detail';\r\n\r\n// style //\r\nconst flexStyle = {\r\n    display: \"flex\"\r\n};\r\n\r\n// function //\r\nfunction DetailPage(props) {\r\n    const isMobile = useMediaQuery({\r\n        query : \"(max-width: 768px)\"\r\n    });\r\n\r\n    const isTablet = useMediaQuery({\r\n        query : \"(min-width: 768px) and (max-width: 992px)\"\r\n    });\r\n\r\n    const isPC = useMediaQuery({\r\n        query : \"(min-width: 992px)\"\r\n    });\r\n\r\n    return(\r\n        <>\r\n        {(isTablet || isPC) &&\r\n        <>\r\n        <Header />\r\n        <InnerTemplate>\r\n            <div style={flexStyle}>\r\n                <Profile {...props.location.state}/>\r\n                <DiaryTemplate>\r\n                    <Detail {...props}/>\r\n                </DiaryTemplate>\r\n            </div>\r\n        </InnerTemplate>\r\n        <footer>\r\n            <p>Copyright© Je yeong eun. All rights Reserved.</p>\r\n        </footer>\r\n        </>\r\n        }\r\n        {isMobile &&\r\n        <>\r\n        <Header />\r\n        <InnerTemplate>\r\n            <Profile {...props.location.state}/>\r\n            <DiaryTemplate>\r\n                <Detail {...props}/>\r\n            </DiaryTemplate>\r\n        </InnerTemplate>\r\n        <footer>\r\n            <p>Copyright© Je yeong eun. All rights Reserved.</p>\r\n        </footer>\r\n        </>\r\n        }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DetailPage;","/* EmotionCategory : 감정 폴더 선택 시 선택된 감정 관련 일기 출력 */\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { ImFolder } from 'react-icons/im';\r\nimport DiaryItem from './DiaryItem';\r\n\r\n// style //\r\nconst EmotionCategoryBlock = styled.div`\r\n    padding-top: 60px;\r\n    \r\n    h2 {\r\n        width: 60%;\r\n        margin: 0 auto 70px auto;\r\n        padding: 10px;\r\n        border: 1px solid #CED4DA;\r\n        font-family: \"barunpenR\";\r\n        font-size: 20px;\r\n        text-align: center;\r\n    }\r\n\r\n    .line {\r\n        margin-top: 70px;\r\n        border-top: 1px solid #CED4DA;\r\n    }\r\n\r\n    .emotion-name {\r\n        width: 12%;\r\n        margin: 30px auto 20px auto;\r\n        padding: 10px 50px;\r\n        border: 1px solid #CED4DA;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nconst FolderBlock = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-bottom: 20px;\r\n\r\n    @media screen and (max-width: 768px) {\r\n        margin-left: 8%;\r\n    }\r\n`;\r\n\r\nconst Folder = styled.div`\r\n    margin-right: 50px;\r\n    text-align: center;\r\n    \r\n    .folder-icon {\r\n        font-size: 70px;\r\n    }\r\n\r\n    .joy {\r\n        color: #FFEDA3;\r\n    }\r\n\r\n    .rage {\r\n        color: #FFDCB8;\r\n    }\r\n\r\n    .sad {\r\n        color: #CDF0EA;\r\n        margin-right: 0px;\r\n    }\r\n\r\n    .delight {\r\n        color: #CCF6C8;\r\n    }\r\n\r\n    .love {\r\n        color: #FFDDCC;\r\n    }\r\n\r\n    .hate {\r\n        color: #E7E6E1;\r\n        margin-right: 0px;\r\n    }\r\n\r\n    .desire {\r\n        color: #FFE6E6;\r\n    }\r\n\r\n    .common {\r\n        color: #E7D4B5;\r\n    }\r\n\r\n    .others {\r\n        color: #FFF5DA;\r\n        margin-right: 0px;\r\n    }\r\n\r\n    h5 {\r\n        margin: 0px;\r\n        font-family: \"barunpenB\";\r\n        font-size: 20px;\r\n    }\r\n\r\n    &:hover{\r\n        cursor: pointer;\r\n        filter: brightness(97%);\r\n    }\r\n`;\r\n\r\nconst DiaryListBlock = styled.div`\r\n    flex: 1;\r\n    height: 1010px;\r\n    padding: 0px 5px;\r\n    overflow-y: auto;\r\n`;\r\n\r\n// function //\r\nfunction EmotionCategory(props) {\r\n    const [currentEmotion, setCurrentEmotion] = useState(\"기쁨\");\r\n    const diaries = props.diaries;\r\n\r\n    return (\r\n        <EmotionCategoryBlock>\r\n            <h2>폴더 안에 감정별로 일기가 담겨있어요.</h2>\r\n            <FolderBlock>\r\n                <Folder>\r\n                <ImFolder className=\"folder-icon joy\" onClick={()=>{setCurrentEmotion(\"기쁨\");}}/>\r\n                <h5>기쁨</h5>\r\n                </Folder>\r\n                <Folder>\r\n                <ImFolder className=\"folder-icon rage\" onClick={()=>{setCurrentEmotion(\"분노\");}}/>\r\n                <h5>분노</h5>\r\n                </Folder>\r\n                <Folder>\r\n                <ImFolder className=\"folder-icon sad\" onClick={()=>{setCurrentEmotion(\"슬픔\");}}/>\r\n                <h5>슬픔</h5>\r\n                </Folder> \r\n            </FolderBlock>\r\n            <FolderBlock>\r\n                <Folder>\r\n                <ImFolder className=\"folder-icon delight\" onClick={()=>{setCurrentEmotion(\"즐거움\");}}/>\r\n                <h5>즐거움</h5>\r\n                </Folder>\r\n                <Folder>\r\n                <ImFolder className=\"folder-icon love\" onClick={()=>{setCurrentEmotion(\"사랑\");}}/>\r\n                <h5>사랑</h5>\r\n                </Folder>\r\n                <Folder>\r\n                <ImFolder className=\"folder-icon hate\" onClick={()=>{setCurrentEmotion(\"미움\");}}/>\r\n                <h5>미움</h5>\r\n                </Folder> \r\n            </FolderBlock>\r\n            <FolderBlock>\r\n                <Folder>\r\n                <ImFolder className=\"folder-icon desire\" onClick={()=>{setCurrentEmotion(\"바람\");}}/>\r\n                <h5>바람</h5>\r\n                </Folder>\r\n                <Folder>\r\n                <ImFolder className=\"folder-icon common\" onClick={()=>{setCurrentEmotion(\"무난\");}}/>\r\n                <h5>무난</h5>\r\n                </Folder>\r\n                <Folder>\r\n                <ImFolder className=\"folder-icon others\" onClick={()=>{setCurrentEmotion(\"기타\");}}/>\r\n                <h5>기타</h5>\r\n                </Folder> \r\n            </FolderBlock>\r\n            <div className=\"line\"></div>\r\n            <h3 className=\"emotion-name\">{currentEmotion}</h3>\r\n            <DiaryListBlock>\r\n                {props.diaries.map(diary => diary.emotion === currentEmotion ? <Link to={{\r\n                    key: diary.id,\r\n                    pathname: '/detail/'+diary.id,\r\n                    state: {diaries}\r\n                }}><DiaryItem diary={diary} onRemove={props.onRemove}/></Link>: \"\")}\r\n            </DiaryListBlock>\r\n        </EmotionCategoryBlock>\r\n    );\r\n}\r\n\r\nexport default EmotionCategory;","/* EmotionsPage : 감정별로 일기를 모아보는 페이지 */\r\nimport React from 'react';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport Header from '../components/Header';\r\nimport InnerTemplate from '../components/InnerTemplate';\r\nimport Profile from '../components/Profile';\r\nimport DiaryTemplate from '../components/DiaryTemplate';\r\nimport EmotionCategory from '../components/EmotionCategory';\r\n\r\n// style //\r\nconst flexStyle = {\r\n    display: \"flex\"\r\n};\r\n\r\n// function //\r\nfunction EmotionsPage(props) {\r\n    const isMobile = useMediaQuery({\r\n        query : \"(max-width: 768px)\"\r\n    });\r\n\r\n    const isTablet = useMediaQuery({\r\n        query : \"(min-width: 768px) and (max-width: 992px)\"\r\n    });\r\n\r\n    const isPC = useMediaQuery({\r\n        query : \"(min-width: 992px)\"\r\n    });\r\n\r\n    return(\r\n        <>\r\n            {(isTablet || isPC) &&\r\n                <>\r\n                <Header />\r\n                <InnerTemplate>\r\n                    <div style={flexStyle}>\r\n                        <Profile {...props} />\r\n                        <DiaryTemplate>\r\n                            <EmotionCategory {...props} />\r\n                        </DiaryTemplate>\r\n                    </div>\r\n                </InnerTemplate>\r\n                <footer>\r\n                    <p>Copyright© Je yeong eun. All rights Reserved.</p>\r\n                </footer>\r\n                </>\r\n            }\r\n            {isMobile &&\r\n                <>\r\n                <Header />\r\n                <InnerTemplate>\r\n                    <Profile {...props} />\r\n                    <DiaryTemplate>\r\n                        <EmotionCategory {...props} />\r\n                    </DiaryTemplate>\r\n                </InnerTemplate>\r\n                <footer>\r\n                    <p>Copyright© Je yeong eun. All rights Reserved.</p>\r\n                </footer>\r\n                </>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EmotionsPage;","/* CalendarDiary : 달력에서 선택한 날짜의 일기 출력 */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport '../css/Calendar.css';\r\nimport Calendar from 'react-calendar'\r\nimport DiaryItem from './DiaryItem';\r\n\r\n// style //\r\nconst CalendarBlock = styled.div`\r\n    padding: 40px 10px 0px 10px;\r\n\r\n    .calendar {\r\n        margin: 0 auto;\r\n        padding: 0px 90px;\r\n    }\r\n\r\n    .line {\r\n        margin: 50px 0px 25px 0px;\r\n        border-bottom : 1px solid #CED4DA;\r\n    }\r\n\r\n    .date {\r\n        padding: 10px 20px;\r\n        margin: 0px 70px 15px 70px;\r\n        border: 1px solid #ced4da;\r\n        font-size: 21px;\r\n        text-align: center;\r\n        letter-spacing: 2px;\r\n    }\r\n`;\r\n\r\nconst DiaryListBlock = styled.div`\r\n    height: 1075px;\r\n    overflow-y: auto;\r\n    flex: 1;\r\n\r\n    @media screen and (max-width: 1320px) { height: 1120px; }\r\n    @media screen and (max-width: 992px) { height: 1170px; }\r\n    @media screen and (max-width: 768px) { height: 1090px; }\r\n`;\r\n\r\n// function //\r\nfunction CalendarForDiary(props) {\r\n    const [value, onChange] = useState(new Date()); // 캘린더에서 바뀌는 날짜값\r\n    const d = new Date();\r\n    const [year, setYear] = useState(d.getFullYear());\r\n    const [month, setMonth] = useState(d.getMonth()+1);\r\n    const [date, setDate] = useState(d.getDate());\r\n    let initialToday = year + \". \" + month + \". \" + date + \".\";\r\n    let [today, setToday] = useState(initialToday);\r\n\r\n    const diaries = props.diaries;\r\n\r\n    // 캘린더에서 날짜를 선택할 때마다 today값 새로 설정\r\n    useEffect(()=>{\r\n        setYear(value.getFullYear());\r\n        setMonth(value.getMonth()+1);\r\n        setDate(value.getDate());\r\n        setToday(year + \". \" + month + \". \" + date + \".\");\r\n    },[value, year, month, date]);\r\n\r\n    return (\r\n        <CalendarBlock>\r\n            <Calendar className=\"calendar\" onChange={onChange} value={value} />\r\n            <div className=\"line\"></div>\r\n            <h3 className=\"date\">{today}</h3>\r\n            <DiaryListBlock>\r\n                {diaries.map(diary => diary.dateforDiary === today ? <Link to={{\r\n                    key: diary.id,\r\n                    pathname: '/detail/'+diary.id,\r\n                    state: {diaries}\r\n                }}><DiaryItem diary={diary} onRemove={props.onRemove} key={diary.id}/></Link> : \"\")}\r\n            </DiaryListBlock>\r\n        </CalendarBlock>\r\n    );\r\n}\r\n\r\nexport default CalendarForDiary;","/* CalendarPage : 달력 상에서 날짜를 선택하면 일기를 볼 수 있는 페이지 */\r\nimport React from 'react';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport Header from '../components/Header';\r\nimport InnerTemplate from '../components/InnerTemplate';\r\nimport Profile from '../components/Profile';\r\nimport DiaryTemplate from '../components/DiaryTemplate';\r\nimport CalendarForDiary from '../components/CalendarForDiary';\r\n\r\n// style //\r\nconst flexStyle = {\r\n    display: \"flex\"\r\n};\r\n\r\n// function //\r\nfunction CalenderPage(props) {\r\n    const isMobile = useMediaQuery({\r\n        query : \"(max-width: 768px)\"\r\n    });\r\n\r\n    const isTablet = useMediaQuery({\r\n        query : \"(min-width: 768px) and (max-width: 992px)\"\r\n    });\r\n\r\n    const isPC = useMediaQuery({\r\n        query : \"(min-width: 992px)\"\r\n    });\r\n\r\n    return(\r\n        <>\r\n        {(isTablet || isPC) && \r\n        <>\r\n        <Header />\r\n            <InnerTemplate>\r\n                <div style={flexStyle}>\r\n                    <Profile {...props} />\r\n                    <DiaryTemplate>\r\n                        <CalendarForDiary {...props} />\r\n                    </DiaryTemplate>\r\n                </div>\r\n            </InnerTemplate>\r\n            <footer>\r\n                <p>Copyright© Je yeong eun. All rights Reserved.</p>\r\n            </footer>\r\n            </>\r\n        }\r\n        {isMobile && \r\n        <>\r\n        <Header />\r\n            <InnerTemplate>\r\n                <Profile {...props} />\r\n                <DiaryTemplate>\r\n                    <CalendarForDiary {...props} />\r\n                </DiaryTemplate>\r\n            </InnerTemplate>\r\n            <footer>\r\n                <p>Copyright© Je yeong eun. All rights Reserved.</p>\r\n            </footer>\r\n        </>\r\n        }    \r\n        </>\r\n    );\r\n}\r\n\r\nexport default CalenderPage;","/* Stats : 오늘의 감정, 이 달의 감정 통계 차트 */\r\nimport React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { ResponsivePie } from '@nivo/pie';\r\nimport { ResponsiveBar } from '@nivo/bar';\r\nimport DiaryDate from './DiaryDate';\r\n\r\n// style //\r\nconst StatsBlock = styled.div`\r\n    padding: 40px 30px;\r\n    \r\n    h1 {\r\n        margin: 100px 0px 50px 0px;\r\n        padding: 10px 0px;\r\n        border: 1px solid #CED4DA;\r\n        font-family: \"barunpenB\";\r\n        font-size: 27px;\r\n        text-align: center;\r\n    }\r\n\r\n    @media screen and (max-width: 992px) {\r\n        h1 { font-size: 22px; }\r\n    }\r\n`;\r\n\r\nconst PieChart = styled.div`\r\n    height: 500px;\r\n`;\r\n\r\nconst BarChart = styled.div`\r\n    height: 550px;\r\n`;\r\n\r\nconst Mood = styled.div`\r\n    padding: 20px 30px 35px 30px;\r\n    margin-top: 30px;\r\n    border: 1px solid #ced4da;\r\n\r\n    h2 {\r\n        font-family: \"barunpenB\";\r\n        font-size: 21px;\r\n    }\r\n\r\n    p {\r\n        font-family: \"barunpenR\";\r\n        font-size: 17px;\r\n        line-height: 1.6em;\r\n        margin: 0px;\r\n    }\r\n\r\n    @media screen and (max-width: 992px) {\r\n        h2 { font-size: 18px; }\r\n        p { font-size: 14px; }\r\n    }\r\n\r\n    @media screen and (max-width: 768px) {\r\n        h2 { font-size: 18px; }\r\n        p { font-size: 15px; }\r\n    }\r\n`;\r\n\r\n// 가장 많은 감정에 대한 description //\r\nconst description = [\r\n    {\r\n        id: 0,\r\n        emotion: \"기쁨\",\r\n        title: \"오늘은 기분 좋은 일이 많은 날이네요!\",\r\n        advice: [\"기쁜 일이 많았던 하루셨군요. 날마다 일어나는 소소한 편안함과 기쁨에서 행복을 찾는다면 기분좋은 날들이 더 많아질 거에요.\", \r\n        \"기쁨은 나누면 배가 되니 소중한 사람들과 오늘의 기쁜 일을 소소하게 나누는 것도 기분 전환이 될 수 있겠죠?\",\r\n        \"오늘도 고생 많으셨습니다. 편안한 마음으로 푹 주무세요.\"]\r\n    },\r\n    {\r\n        id: 1,\r\n        emotion: \"분노\",\r\n        title: \"화가 나는 일이 많으셨나요?\",\r\n        advice: [\"타인에 대한 분노는 결국 내 시간과 내 감정을 소모하게 하여, 나를 아무것도 할 수 없게 만들어요.\",\r\n                \"나에게 상처를 준 상대가 화나겠지만 그 감정에 계속 붙잡혀 있지 말고 나를 위해 내려놓으세요.\",\r\n                \"내 시간과 감정을 좋아하는 사람에게 쏟아요.\"]\r\n    },\r\n    {\r\n        id: 2,\r\n        emotion: \"슬픔\",\r\n        title: \"오늘은 슬픔이 많은 날이네요\",\r\n        advice: [\"평화롭지만은 않았던 하루, 당신을 괴롭히던 순간들은 이미 지나갔어요.\",\r\n                \"굳이 그 순간에 머무느라 다시금 아파한다거나 정답이 없는 고민에 빠져 잠을 설치지 말아요.\",\r\n                \"오늘 하루 정말 수고하셨어요. 힘들었던 오늘, 당신을 위로할 좋은 꿈이 찾아오길 바라요.\"]\r\n    },\r\n    {\r\n        id: 3,\r\n        emotion: \"즐거움\",\r\n        title: \"오늘은 즐거운 날이셨나요?\",\r\n        advice: [\"웃을 일이 많은 날이셨나요? 그렇다면 다행이에요.\",\r\n                \"항상 즐거울 수는 없는 것이 우리의 일상사이지만 스스로 영화감독이 되어 즐거움을 연출하면\",\r\n                \"놀랍게도 그 즐거움이 실제의 삶에 고스란히 녹아든답니다. 내일도 즐거운 하루 되세요.\"]\r\n    },\r\n    {\r\n        id: 4,\r\n        emotion: \"사랑\",\r\n        title: \"사랑이 가득한 날이셨군요\",\r\n        advice: [\"사랑하고 사랑받는 것은 양 쪽에서 태양을 느끼는 것이라는 말이 있어요.\",\r\n                \"그만큼 사랑이라는 감정은 삶은 따뜻하고 풍요롭게 만든답니다.\",\r\n                \"하지만 무엇보다 위대한 사랑은 자신을 사랑하는 법을 아는 것이니 나 자신도 많이 사랑해주세요.\"]\r\n    },\r\n    {\r\n        id: 5,\r\n        emotion: \"미움\",\r\n        title: \"미움이 비처럼 쏟아지는 하루셨나요?\",\r\n        advice: [\"미움은 나 자신에게도 끊임없는 상처를 주는 양날의 검과 같은 감정이에요.\",\r\n                \"그들을 향한 미움과 원망에서 스스로를 놓아주도록 해요.\",\r\n                \"용서는 자기 자신에게 베푸는 가장 큰 자비이자 사랑입니다.\"]\r\n    },\r\n    {\r\n        id: 6,\r\n        emotion: \"바람\",\r\n        title: \"무언가를 간절히 바라고 있나요?\",\r\n        advice: [\"소망과 목표 의식은 삶의 큰 원동력이 될 수 있어요.\",\r\n                \"산을 움직이려면 작은 돌을 들어내는 것부터 시작해야 하듯이 작은 목표부터 차근차근 이뤄보세요.\",\r\n                \"그러다보면 내가 원하는 게 성큼 눈 앞에 다가와있을 거에요.\"]\r\n    },\r\n    {\r\n        id: 7,\r\n        emotion: \"무난\",\r\n        title: \"평온하고 무난한 하루였나요?\",\r\n        advice: [\"꼭 다이나믹한 하루만이 좋은 건 아니에요.\",\r\n                \"늘 그랬듯이 편안하고 무난하게 흘러가는 하루하루가 참 감사하고 소중한 순간들이죠.\",\r\n                \"오늘 하루 수고했어요. 편안하게 하루를 마무리하시길 바라요.\"]\r\n    },\r\n    {\r\n        id: 8,\r\n        emotion: \"기타\",\r\n        title: \"오늘은 어떤 하루였나요?\",\r\n        advice: [\"어떤 일이 있었고, 어떤 기분이 드는 하루였나요?\",\r\n                \"오늘 하루도 무사히 살아갔으면 그걸로 충분해요.\",\r\n                \"내일은 더 많이 웃고 행복한 하루가 될 거에요! 따뜻한 차 한 잔과 함께 하루를 마무리 해보는 건 어떨까요?\"]\r\n    }\r\n];\r\n\r\n// 오늘의 감정 통계를 나타내는 파이 차트 //\r\nconst MyResponsivePie = ({ data }) => (\r\n    <ResponsivePie\r\n        data={data}\r\n        margin={{ top: 40, right: 80, bottom: 80, left: 80 }}\r\n        innerRadius={0.4}\r\n        padAngle={1}\r\n        colors={{ scheme: 'pastel1' }}\r\n        cornerRadius={3}\r\n        activeOuterRadiusOffset={8}\r\n        borderWidth={1}\r\n        borderColor={{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] }}\r\n        arcLinkLabelsSkipAngle={10}\r\n        arcLinkLabelsTextColor=\"#333333\"\r\n        arcLinkLabelsThickness={2}\r\n        arcLinkLabelsColor={{ from: 'color' }}\r\n        arcLabelsSkipAngle={10}\r\n        arcLabelsTextColor={{ from: 'color', modifiers: [ [ 'darker', 2 ] ] }}\r\n        defs={[\r\n            {\r\n                id: 'dots',\r\n                type: 'patternDots',\r\n                background: 'inherit',\r\n                color: 'rgba(255, 255, 255, 0.3)',\r\n                size: 4,\r\n                padding: 1,\r\n                stagger: true\r\n            },\r\n            {\r\n                id: 'lines',\r\n                type: 'patternLines',\r\n                background: 'inherit',\r\n                color: 'rgba(255, 255, 255, 0.3)',\r\n                rotation: -45,\r\n                lineWidth: 6,\r\n                spacing: 10\r\n            }\r\n        ]}\r\n        fill={[\r\n            {\r\n                match: {\r\n                    id: '기쁨'\r\n                },\r\n                id: 'dots'\r\n            },\r\n            {\r\n                match: {\r\n                    id: '즐거움'\r\n                },\r\n                id: 'dots'\r\n            },\r\n            {\r\n                match: {\r\n                    id: '분노'\r\n                },\r\n                id: 'lines'\r\n            },\r\n            {\r\n                match: {\r\n                    id: '슬픔'\r\n                },\r\n                id: 'lines'\r\n            },\r\n            {\r\n                match: {\r\n                    id: '미움'\r\n                },\r\n                id: 'lines'\r\n            }\r\n        ]}\r\n        legends={[\r\n            {\r\n                anchor: 'bottom',\r\n                direction: 'row',\r\n                justify: false,\r\n                translateX: 0,\r\n                translateY: 56,\r\n                itemsSpacing: 0,\r\n                itemWidth: 80,\r\n                itemHeight: 18,\r\n                itemTextColor: '#999',\r\n                itemDirection: 'left-to-right',\r\n                itemOpacity: 1,\r\n                symbolSize: 18,\r\n                symbolShape: 'circle',\r\n                effects: [\r\n                    {\r\n                        on: 'hover',\r\n                        style: {\r\n                            itemTextColor: '#000'\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        ]}\r\n    />\r\n);\r\n\r\n// 이 달의 감정 통계를 나타내는 바 차트 //\r\nconst MyResponsiveBar = ({ data }) => (\r\n    <ResponsiveBar\r\n        data={data}\r\n        keys={['emotion']}\r\n        indexBy=\"name\"\r\n        margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\r\n        padding={0.3}\r\n        valueScale={{ type: 'linear' }}\r\n        indexScale={{ type: 'band', round: true }}\r\n        valueFormat={{ format: '', enabled: false }}\r\n        colors={{ scheme: 'pastel1' }}\r\n        defs={[\r\n            {\r\n                id: 'dots',\r\n                type: 'patternDots',\r\n                background: 'inherit',\r\n                color: '#38bcb2',\r\n                size: 4,\r\n                padding: 1,\r\n                stagger: true\r\n            },\r\n            {\r\n                id: 'lines',\r\n                type: 'patternLines',\r\n                background: 'inherit',\r\n                color: '#eed312',\r\n                rotation: -45,\r\n                lineWidth: 6,\r\n                spacing: 10\r\n            }\r\n        ]}\r\n        borderColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\r\n        axisTop={null}\r\n        axisRight={null}\r\n        axisBottom={{\r\n            tickSize: 5,\r\n            tickPadding: 5,\r\n            tickRotation: 0,\r\n            legend: '',\r\n            legendPosition: 'middle',\r\n            legendOffset: 32\r\n        }}\r\n        axisLeft={{\r\n            tickSize: 5,\r\n            tickPadding: 5,\r\n            tickRotation: 0,\r\n            legend: '',\r\n            legendPosition: 'middle',\r\n            legendOffset: -40\r\n        }}\r\n        labelSkipWidth={12}\r\n        labelSkipHeight={12}\r\n        labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\r\n        legends={[\r\n            {\r\n                dataFrom: 'keys',\r\n                anchor: 'bottom-right',\r\n                direction: 'column',\r\n                justify: false,\r\n                translateX: 120,\r\n                translateY: 0,\r\n                itemsSpacing: 2,\r\n                itemWidth: 100,\r\n                itemHeight: 20,\r\n                itemDirection: 'left-to-right',\r\n                itemOpacity: 0.85,\r\n                symbolSize: 20,\r\n                effects: [\r\n                    {\r\n                        on: 'hover',\r\n                        style: {\r\n                            itemOpacity: 1\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        ]}\r\n    />\r\n);\r\n\r\n// function //\r\nfunction Stats(props) {\r\n    const d = new Date();\r\n    const year = d.getFullYear();\r\n    const month = d.getMonth()+1;\r\n    const date = d.getDate();\r\n    const initialToday = year + \". \" + month + \". \" + date + \".\";\r\n    const [today, setToday] = useState(initialToday);\r\n\r\n    let strArray = today.split('.');\r\n\r\n    // DiaryDate에서 날짜를 받아오는 함수 //\r\n    const getToday = (text) => {\r\n        setToday(text);\r\n    };\r\n\r\n    // 오늘의 감정, 이 달의 감정 갯수. 동적인 변수로 전부 useState로 관리. //\r\n    let [joyCount, setJoyCount] = useState(0), [rageCount, setRageCount] = useState(0),\r\n    [sadCount, setSadCount] = useState(0), [delightCount, setDelightCount] = useState(0),\r\n    [loveCount, setLoveCount] = useState(0), [hateCount, setHateCount] = useState(0),\r\n    [desireCount, setDesireCount] = useState(0), [commonCount, setCommonCount] = useState(0),\r\n    [othersCount, setOthersCount] = useState(0);\r\n\r\n    let [joyCountMonthly, setJoyCountMonthly] = useState(0), [rageCountMonthly, setRageCountMonthly] = useState(0),\r\n    [sadCountMonthly, setSadCountMonthly] = useState(0), [delightCountMonthly, setDelightCountMonthly] = useState(0),\r\n    [loveCountMonthly, setLoveCountMonthly] = useState(0), [hateCountMonthly, setHateCountMonthly] = useState(0),\r\n    [desireCountMonthly, setDesireCountMonthly] = useState(0), [commonCountMonthly, setCommonCountMonthly] = useState(0),\r\n    [othersCountMonthly, setOthersCountMonthly] = useState(0);\r\n\r\n    // 가장 많은 감정 //\r\n    const [mostEmotion, setMostEmotion] = useState(\"기타\");\r\n\r\n    // 날짜가 바뀌면 모든 값 초기화 //\r\n    const init = () => {\r\n        setJoyCount(0); setRageCount(0); setSadCount(0); setDelightCount(0); setLoveCount(0); setHateCount(0);\r\n        setDesireCount(0); setCommonCount(0); setOthersCount(0);\r\n        setJoyCountMonthly(0); setRageCountMonthly(0); setSadCountMonthly(0); setDelightCountMonthly(0);\r\n        setLoveCountMonthly(0); setHateCountMonthly(0); setDesireCountMonthly(0); setCommonCountMonthly(0); setOthersCountMonthly(0);\r\n        joyCount = 0; rageCount = 0; sadCount = 0; delightCount = 0; loveCount = 0; hateCount = 0;\r\n        desireCount = 0; commonCount = 0; othersCount = 0;\r\n        joyCountMonthly = 0; rageCountMonthly = 0; sadCountMonthly = 0; delightCountMonthly = 0; loveCountMonthly = 0;\r\n        hateCountMonthly = 0; desireCountMonthly = 0; commonCountMonthly = 0; othersCountMonthly = 0;\r\n    }\r\n\r\n    // 날짜가 바뀔 때마다 갯수 재설정\r\n    useEffect(()=>{\r\n        init();\r\n        props.diaries.forEach(diary => {\r\n            if(diary.dateforDiary === today) {\r\n                if(diary.emotion === \"기쁨\")\r\n                    setJoyCount(++joyCount);\r\n                else if(diary.emotion === \"분노\")\r\n                    setRageCount(++rageCount);\r\n                else if(diary.emotion === \"슬픔\")\r\n                    setSadCount(++sadCount);\r\n                else if(diary.emotion === \"즐거움\")\r\n                    setDelightCount(++delightCount);\r\n                else if(diary.emotion === \"사랑\")\r\n                    setLoveCount(++loveCount);\r\n                else if(diary.emotion === \"미움\")\r\n                    setHateCount(++hateCount);\r\n                else if(diary.emotion === \"바람\")\r\n                    setDesireCount(++desireCount);\r\n                else if(diary.emotion === \"무난\")\r\n                    setCommonCount(++commonCount);\r\n                else if(diary.emotion === \"기타\")\r\n                    setOthersCount(++othersCount);\r\n            }\r\n        });\r\n\r\n        props.diaries.forEach(diary => {\r\n            let diaryStrArray = diary.dateforDiary.split('.');\r\n            if(diaryStrArray[1] === strArray[1]){\r\n                if(diary.emotion === \"기쁨\")\r\n                    setJoyCountMonthly(++joyCountMonthly);\r\n                else if(diary.emotion === \"분노\")\r\n                    setRageCountMonthly(++rageCountMonthly);\r\n                else if(diary.emotion === \"슬픔\")\r\n                    setSadCountMonthly(++sadCountMonthly);\r\n                else if(diary.emotion === \"즐거움\")\r\n                    setDelightCountMonthly(++delightCountMonthly);\r\n                else if(diary.emotion === \"사랑\")\r\n                    setLoveCountMonthly(++loveCountMonthly);\r\n                else if(diary.emotion === \"미움\")\r\n                    setHateCountMonthly(++hateCountMonthly);\r\n                else if(diary.emotion === \"바람\")\r\n                    setDesireCountMonthly(++desireCountMonthly);\r\n                else if(diary.emotion === \"무난\")\r\n                    setCommonCountMonthly(++commonCountMonthly);\r\n                else if(diary.emotion === \"기타\")\r\n                    setOthersCountMonthly(++othersCountMonthly);\r\n            }\r\n        });\r\n        rank(); // 가장 많은 emotion 순으로 정렬\r\n    },[today]);\r\n\r\n    // 파이 차트 데이터 //\r\n    let pieData = \r\n    [\r\n        {\r\n            \"id\": \"기쁨\",\r\n            \"label\": \"기쁨\",\r\n            \"value\": joyCount,\r\n            \"color\": \"#FFEDA3\"\r\n        },\r\n        {\r\n            \"id\": \"분노\",\r\n            \"label\": \"분노\",\r\n            \"value\": rageCount,\r\n            \"color\": \"#FFDCB8\"\r\n        },\r\n        {\r\n            \"id\": \"슬픔\",\r\n            \"label\": \"슬픔\",\r\n            \"value\": sadCount,\r\n            \"color\": \"#CDF0EA\"\r\n        },\r\n        {\r\n            \"id\": \"즐거움\",\r\n            \"label\": \"즐거움\",\r\n            \"value\": delightCount,\r\n            \"color\": \"#CCF6C8\"\r\n        },\r\n        {\r\n            \"id\": \"사랑\",\r\n            \"label\": \"사랑\",\r\n            \"value\": loveCount,\r\n            \"color\": \"#FFDDCC\"\r\n        },\r\n        {\r\n            \"id\": \"미움\",\r\n            \"label\": \"미움\",\r\n            \"value\": hateCount,\r\n            \"color\": \"#E7E6E1\"\r\n        },\r\n        {\r\n        \"id\": \"바람\",\r\n        \"label\": \"바람\",\r\n        \"value\": desireCount,\r\n        \"color\": \"#FFE6E6\"\r\n        },\r\n        {\r\n        \"id\": \"무난\",\r\n        \"label\": \"무난\",\r\n        \"value\": commonCount,\r\n        \"color\": \"#E7D4B5\"\r\n        },\r\n        {\r\n        \"id\": \"기타\",\r\n        \"label\": \"기타\",\r\n        \"value\": othersCount,\r\n        \"color\": \"#FFF5DA\"\r\n        }\r\n      ];\r\n\r\n    // 바 차트 데이터 //\r\n    const barData = [\r\n        {\r\n            \"name\": \"기쁨\",\r\n            \"emotion\": joyCountMonthly\r\n        },\r\n        {\r\n            \"name\": \"분노\",\r\n            \"emotion\": rageCountMonthly\r\n        },\r\n        {\r\n            \"name\": \"슬픔\",\r\n            \"emotion\": sadCountMonthly\r\n        },\r\n        {\r\n            \"name\": \"즐거움\",\r\n            \"emotion\": delightCountMonthly\r\n        },\r\n        {\r\n            \"name\": \"사랑\",\r\n            \"emotion\": loveCountMonthly\r\n        },\r\n        {\r\n            \"name\": \"미움\",\r\n            \"emotion\": hateCountMonthly\r\n        },\r\n        {\r\n            \"name\": \"바람\",\r\n            \"emotion\": desireCountMonthly\r\n        },\r\n        {\r\n            \"name\": \"무난\",\r\n            \"emotion\": commonCountMonthly\r\n        },\r\n        {\r\n            \"name\": \"기타\",\r\n            \"emotion\": othersCountMonthly\r\n        }\r\n    ];\r\n\r\n    // 가장 많은 감정 순으로 정렬 //\r\n    const rank = () => {\r\n        let ranking = [\r\n            {emotion: \"기쁨\", value: joyCount},\r\n            {emotion: \"분노\", value: rageCount},\r\n            {emotion: \"슬픔\", value: sadCount},\r\n            {emotion: \"즐거움\", value: delightCount},\r\n            {emotion: \"사랑\", value: loveCount},\r\n            {emotion: \"미움\", value: hateCount},\r\n            {emotion: \"바람\", value: desireCount},\r\n            {emotion: \"무난\", value: commonCount},\r\n            {emotion: \"기타\", value: othersCount}\r\n        ];\r\n\r\n        ranking.sort(function(a, b){\r\n            return b.value - a.value;\r\n        });\r\n        setMostEmotion(ranking[0].emotion);\r\n    };\r\n\r\n\r\n    return(\r\n        <StatsBlock>\r\n            <DiaryDate getToday={getToday}/>\r\n            <PieChart>\r\n                <MyResponsivePie data={pieData} />\r\n            </PieChart>\r\n            <Mood>\r\n                <h2>{description.map(des => des.emotion === mostEmotion ? des.title : \"\")}</h2>\r\n                <p>{description.map(des => des.emotion === mostEmotion ? des.advice[0] : \"\")}</p>\r\n                <p>{description.map(des => des.emotion === mostEmotion ? des.advice[1] : \"\")}</p>\r\n                <p>{description.map(des => des.emotion === mostEmotion ? des.advice[2] : \"\")}</p>\r\n            </Mood>\r\n            <h1>이 달의 감정</h1>\r\n            <BarChart>\r\n                <MyResponsiveBar data={barData} />\r\n            </BarChart>\r\n        </StatsBlock>\r\n    );\r\n}\r\n\r\nexport default Stats;","/* StatsPage : 오늘의 통계, 이 달의 통계를 보여주는 페이지 */\r\nimport React from 'react';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport Header from '../components/Header';\r\nimport InnerTemplate from '../components/InnerTemplate';\r\nimport Profile from '../components/Profile';\r\nimport DiaryTemplate from '../components/DiaryTemplate';\r\nimport Stats from '../components/Stats';\r\n\r\n// style //\r\nlet flexStyle = {\r\n    display: \"flex\"\r\n};\r\n\r\n// function //\r\nfunction StatsPage(props) {\r\n    const isMobile = useMediaQuery({\r\n        query : \"(max-width: 768px)\"\r\n    });\r\n\r\n    const isTablet = useMediaQuery({\r\n        query : \"(min-width: 768px) and (max-width: 992px)\"\r\n    });\r\n\r\n    const isPC = useMediaQuery({\r\n        query : \"(min-width: 992px)\"\r\n    });\r\n\r\n    return(\r\n        <>\r\n        {(isTablet || isPC) && \r\n        <>\r\n            <Header />\r\n            <InnerTemplate>\r\n                <div style={flexStyle}>\r\n                    <Profile {...props} />\r\n                    <DiaryTemplate>\r\n                        <Stats {...props} />\r\n                    </DiaryTemplate>\r\n                </div>\r\n            </InnerTemplate>\r\n            <footer>\r\n                <p>Copyright© Je yeong eun. All rights Reserved.</p>\r\n            </footer>\r\n        </>\r\n        }\r\n        {isMobile &&\r\n        <>\r\n        <Header />\r\n        <InnerTemplate>\r\n            <Profile {...props} />\r\n            <DiaryTemplate>\r\n                <Stats {...props} />\r\n            </DiaryTemplate>\r\n        </InnerTemplate>\r\n        <footer>\r\n            <p>Copyright© Je yeong eun. All rights Reserved.</p>\r\n        </footer>\r\n    </>\r\n        }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default StatsPage;","/* RouterJS : 라우터를 이용한 페이지 이동 설정 */\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport MainPage from '../pages/MainPage';\r\nimport InputFormPage from '../pages/InputFormPage';\r\nimport DetailPage from '../pages/DetailPage';\r\nimport EmotionsPage from '../pages/EmotionsPage';\r\nimport CalenderPage from '../pages/Calendarpage';\r\nimport StatsPage from '../pages/StatsPage';\r\n\r\nfunction RouterJS(props){\r\n    return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n        <Route path=\"/\" exact render={()=><MainPage {...props} />}/>\r\n        <Route path=\"/input\" exact render={()=><InputFormPage {...props} />}/>\r\n        <Route path=\"/detail/:id\" exact render={props=><DetailPage {...props} />}/>\r\n        <Route path=\"/emotion\" exact render={()=><EmotionsPage {...props} />}/>\r\n        <Route path=\"/calendar\" exact render={()=><CalenderPage {...props} />}/>\r\n        <Route path=\"/stats\" exact render={()=><StatsPage {...props} />}/>\r\n    </Router>\r\n    );\r\n}\r\n\r\nexport default RouterJS;","import React, { useRef, useReducer, useCallback } from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport './fonts/fonts.css';\nimport RouterJS from './components/RouterJS';\n\n// style //\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background: #fff5f5;\n    font-family: \"barunpenR\";\n    color: #495057;\n  }\n\n  a {\n    text-decoration: none;\n    color: #495057;\n  }\n\n  footer {\n    height: 50px;\n    background: #F4A9A8;\n  }\n\n  footer p {\n      padding-top: 15px;\n      font-family: \"barunpenB\";\n      font-size: 14px;\n      color: #FFFFFF;\n      text-align: center;\n  }\n`;\n\n// diary array //\nconst initialState = {\n  inputs: {\n    dateforDiary: \"\",\n    emotion: \"\",\n    subEmotion: [],\n    situation: \"\",\n    reason: \"\",\n    myResponse: \"\",\n    thoughts: \"\",\n    argument: \"\",\n    decision: \"\"\n  },\n  diaries: [\n    {\n      id: 1,\n      dateforDiary: \"2021. 8. 19.\",\n      emotion: \"기쁨\",\n      subEmotion: [\"행복한\", \"만족스러운\", \"기쁜\", \"날아갈 듯한\"],\n      situation: \"내가 예전부터 사고 싶었던 빔프로젝터를 샀다.\",\n      reason: \"영화를 워낙 좋아해서 해상도가 높은 빔프로젝터를 사고 싶었다. 차곡차곡 모은 돈으로 사게 되서 기분이 좋다.\",\n      myResponse: \"사러갈 때부터 기분이 너무 좋았고 집에서도 계속 이런저런 기능을 켜보며 만지작거렸다.\",\n      thoughts: \"좋아하는 취미 하나를 가진 것만으로도 이렇게 행복해질 수 있구나라고 새삼 느꼈다. 또한 목표를 위해 돈을 모으는 과정이 굉장히 뿌듯하고 알찼다.\",\n      argument: \"내 경제사정을 고려해봤을 때 너무 비싼 걸 산 건 아닐까? 좀 더 알아볼 순 없었을까?\",\n      decision: \"나를 위한 소비는 분명히 필요하다. 좋아하는 게 있는 것도 큰 행복이다. 다만 조금 더 합리적인 소비를 위해 더 시간을 쓰고 고민해보자.\"\n    },\n    {\n      id: 2,\n      dateforDiary: \"2021. 8. 19.\",\n      emotion: \"미움\",\n      subEmotion: [\"서운한\", \"싫은\", \"억울한\", \"미운\", \"원망스러운\"],\n      situation: \"나를 이유없이 싫어하고 못되게 구는 사람이 있다.\",\n      reason: \"잘못한 점이 있다면 내가 고칠텐데 그냥 이유없이 싫어하니 서운하고 억울하고 밉다. 그리고 나에 대한 나쁜 이야기를 하고 다녀서 스트레스를 많이 받고 있다.\",\n      myResponse: \"나 역시 그 사람을 싫어하는 티를 많이 내고 있고 지인들에게 억울함을 털어놓고 있다.\",\n      thoughts: \"나에게 못되게 구니 나도 못되게 굴어도 된다는 일종의 합리화를 했던 것 같다.\",\n      argument: \"똑같이 행동하면 기분이 좀 더 나아질까? 나 역시 이유없이 싫어하는 사람이 있지는 않은가?\",\n      decision: \"미움은 나 자신도 상처입히는 감정이다. 똑같이 미워한다고 내 기분이 전혀 좋아지지 않는다. 나를 좋아해주는 사람이 있듯이 싫어하는 사람도 있구나하고 넘기는 게 좋을 것 같다.\"\n    },\n    {\n      id: 3,\n      dateforDiary: \"2021. 8. 19.\",\n      emotion: \"기쁨\",\n      subEmotion: [\"후련한\", \"고무적인\", \"뿌듯한\"],\n      situation: \"토이 프로젝트를 끝냈다!\",\n      reason: \"처음 적용해보는 기능이 많아서 머리 쥐어뜯는 날들이 계속됐었는데 끝나고 나니 너무 뿌듯하고 후련하다. 역시 이게 프로그래밍의 가장 큰 매력이 아닐까 싶다.\",\n      myResponse: \"끝난 기념으로 가족들과 함께 치맥을 먹었다.\",\n      thoughts: \"그냥 너무 기쁘고 뿌듯했다.\",\n      argument: \"끝나고나니 기뻤지만 과정에서 너무 큰 스트레스를 받은 건 아니었을까? 좀 더 시간을 투자하면 더 완성도 높게 마무리할 수 있지 않았을까?\",\n      decision: \"어려움에 많이 부딪힐수록 성장의 밑거름이 되어 나중에 같은 실수를 하지 않을 수 있다.\"\n    }\n  ]\n};\n\n// REDUCER : component의 상태변화에 따라 해당하는 기능 return //\nfunction reducer(state, action) {\n  switch(action.type) {\n    case 'CREATE_DIARY':\n      return{\n        ...state,\n        diaries: state.diaries.concat(action.diary)\n      };\n    case 'EDIT_DIARY':\n      return{\n        ...state,\n        diaries: state.diaries.map(diary => diary.id === action.diary.id ? {diary: action.diary} : diary)\n      };\n    case 'REMOVE_DIARY':\n      return {\n        ...state,\n        diaries: state.diaries.filter(diary => diary.id !== action.id)\n      };\n    default:\n        return state;\n  }\n}\n\nfunction App() {\n  const nextId = useRef(4); // id는 자동 부여\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const {diaries, inputs} = state;\n\n  const onCreate = useCallback(() => {\n    dispatch({\n      type: 'CREATE_DIARY',\n      diary: {\n        id: nextId.current,\n        dateforDiary: inputs.dateforDiary,\n        emotion: inputs.emotion,\n        subEmotion: inputs.subEmotion,\n        situation: inputs.situation,\n        reason: inputs.reason,\n        myResponse: inputs.myResponse,\n        thoughts: inputs.thoughts,\n        argument: inputs.argument,\n        decision: inputs.decision\n      }\n    });\n    nextId.current += 1;\n  }, [inputs.dateforDiary, inputs.emotion, inputs.subEmotion, inputs.situation, inputs.reason, inputs.myResponse, inputs.thoughts, inputs.argument, inputs.decision]);\n\n  const onEdit = useCallback(() => {\n    dispatch({\n      type: 'EDIT_DIARY',\n      diary: {\n        dateforDiary: inputs.dateforDiary,\n        emotion: inputs.emotion,\n        subEmotion: inputs.subEmotion,\n        situation: inputs.situation,\n        reason: inputs.reason,\n        myResponse: inputs.myResponse,\n        thoughts: inputs.thoughts,\n        argument: inputs.argument,\n        decision: inputs.decision\n      }\n    });\n  }, [inputs.dateforDiary, inputs.emotion, inputs.subEmotion, inputs.situation, inputs.reason, inputs.myResponse, inputs.thoughts, inputs.argument, inputs.decision]);\n\n  const onRemove = useCallback((id) =>{\n    dispatch({\n      type: 'REMOVE_DIARY',\n      id\n    });\n  }, []);\n\n  return (\n    <>\n      <GlobalStyle />\n      <RouterJS diaries={diaries} inputs={inputs} onCreate={onCreate} onEdit={onEdit} onRemove={onRemove}/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}